{"version":3,"sources":["main.ac753600.chunk.css","webpack://src/screens/home/Home.sass","webpack://src/index.sass","webpack://src/styles/colors.sass","webpack://src/styles/mq.sass","webpack://src/components/humaniq-id-card/styles.sass","webpack://src/components/not-registered-message/styles.sass","webpack://src/components/humaniq-id-form/styles.sass","webpack://src/components/dialogs/styles.sass","webpack://src/styles/reset.sass","webpack://src/styles/global.sass","webpack://src/App.sass"],"names":[],"mappings":"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","file":"main.ac753600.chunk.css","sourcesContent":["@import url(https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;600&display=swap);\n#root{display:flex;flex:1 1}\n.MuiPaper-elevation{border-top-left-radius:16px !important;border-top-right-radius:16px !important}.MuiAlert-root{border-color:transparent !important}.MuiButton-root{text-transform:none !important;border-radius:12px !important;font-size:16px !important;font-weight:500 !important;box-shadow:none !important}.MuiButton-root.MuiButton-containedPrimary{background-color:#0066da}.MuiButton-root.MuiButton-textPrimary{color:#0066da}.container{height:100%;display:flex;flex:1 1;justify-content:center;background:#f5faff;position:relative;padding:16px}.container.edit{background-color:#fff}.container .main{display:flex;text-align:center;width:800px;flex-direction:column}@media(max-width: 47.99em){.container .main{width:100%}}.container .btn{position:absolute;bottom:16px;width:800px}@media(max-width: 47.99em){.container .btn{width:calc(100% - 32px)}}.container .btn-2{border-radius:12px;position:absolute;bottom:64px;width:800px}@media(max-width: 47.99em){.container .btn-2{width:calc(100% - 32px)}}.drawer-container{background-color:#f5faff;padding:29px 16px}.drawer-container .tittle{font-size:16px;font-weight:500}.drawer-container .description{font-size:14px;padding-top:16px}.drawer-container .stack{padding-top:16px}.drawer-container .stack .paper{display:flex;flex-direction:row;align-items:center;border-radius:12px;padding:12px;margin-top:8px;cursor:pointer}.drawer-container .stack .paper .avatar{width:44px;height:44px;background-color:#f2f3f6}.drawer-container .stack .paper span{padding-left:12px;font-size:16px;font-weight:500}.drawer-container .btn-container{padding-top:29px;display:flex;flex:1 1;justify-content:center}\n.MuiPaper-elevation{border-top-left-radius:16px !important;border-top-right-radius:16px !important}.MuiAlert-root{border-color:transparent !important}.MuiButton-root{text-transform:none !important;border-radius:12px !important;font-size:16px !important;font-weight:500 !important;box-shadow:none !important}.MuiButton-root.MuiButton-containedPrimary{background-color:#0066da}.MuiButton-root.MuiButton-textPrimary{color:#0066da}.card-container{flex-direction:row}.card-container .card{overflow:hidden;border-radius:16px;height:216px;position:relative;display:flex;flex:1 1;background-color:#001833}.card-container .card .title{display:flex;position:absolute;z-index:10;left:16px;top:16px;color:#fff;font-weight:500;font-size:16px}.card-container .card .address{display:flex;flex-direction:row;color:#fff;border:1px solid #fff;border-radius:12px;position:absolute;z-index:10;top:16px;right:16px;padding:6px 6px;align-items:center}.card-container .card .address span{font-weight:500;padding-left:5px}.card-container .card .clouds{display:flex;position:absolute;right:0;bottom:0;height:216px}.card-container .card .avatar{height:100px;width:100px;position:absolute;top:calc(50% - 50px);left:calc(50% - 50px);z-index:10}.card-container .card .name-container{z-index:11;position:absolute;top:calc(50% + 66px);width:100%;justify-content:center;text-align:center;flex:1 1}.card-container .card .name-container .name{font-weight:500;font-size:16px}.card-container .card .bottom{width:100%;position:absolute;bottom:0;display:flex;flex:1 1;height:108px;background-color:#f5faff}.card-container .user-data{flex-direction:column;display:flex;flex:1 1;background:#fff;padding:13px 0 13px 8px;border-radius:16px}.card-container .user-data .row{display:flex;flex-direction:row;justify-content:space-between;padding-right:16px}.card-container .user-data .row .title{font-size:14px;color:#9b9b9b}\n.not-registered-container{display:flex;align-items:baseline;flex-direction:column;padding:16px 0}.not-registered-container .not-connected{font-size:16px;padding:0 16px;line-height:24px}.not-registered-container h1{font-size:16px;font-weight:500;padding:16px 0}.not-registered-container div{font-size:16px}.not-registered-container .list{list-style-type:disc;padding-left:32px}.not-registered-container .list li{text-align:left;font-size:16px;padding:2px 0}\n.card-container{position:relative;flex-direction:row;padding-bottom:50px;overflow:auto}.card-container .back-icon{position:absolute;top:0;left:0}.card-container .image-container{cursor:pointer;padding-top:56px;display:flex;flex:1 1;justify-content:center;align-items:center;flex-direction:column}.card-container .image-container .change-photo{cursor:pointer;padding-top:16px;color:#0066da;font-weight:500}.card-container .form-container{display:flex;flex:1 1;flex-direction:column}.card-container .form-container .MuiTextField-root,.card-container .form-container .MuiFormControl-root{margin:16px 0}\n.drawer-container{background-color:#f5faff;padding:29px 16px 16px;display:flex;flex-direction:column}.drawer-container .tittle{font-size:16px;font-weight:500}.drawer-container .description{font-size:14px;padding-top:16px}.drawer-container .description.medium{font-size:16px;padding-top:56px}.drawer-container .stack{padding-top:16px}.drawer-container .stack .paper{display:flex;flex-direction:row;align-items:center;border-radius:12px;padding:12px;margin-top:8px;cursor:pointer}.drawer-container .stack .paper .avatar{width:44px;height:44px;background-color:#f2f3f6}.drawer-container .stack .paper span{padding-left:12px;font-size:16px;font-weight:500}.drawer-container .btn-container{padding-top:29px;display:flex;flex:1 1;justify-content:end;flex-direction:column}.drawer-container .btn-container button:nth-child(2){padding-top:16px}\n*,*:before,*:after{box-sizing:border-box}html,body,div,span,object,iframe,figure,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,code,em,img,small,strike,strong,sub,sup,tt,b,u,i,ol,ul,li,fieldset,form,label,table,caption,tbody,tfoot,thead,tr,th,td,main,canvas,embed,footer,header,nav,section,video{margin:0;padding:0;border:0;font:inherit;vertical-align:baseline;text-rendering:optimizeLegibility;-webkit-font-smoothing:antialiased;font-size:14px;-webkit-text-size-adjust:none;-moz-text-size-adjust:none;text-size-adjust:none;font-family:Roboto}input::-webkit-outer-spin-button,input::-webkit-inner-spin-button{-webkit-appearance:none;margin:0}input[type=number]{-moz-appearance:textfield}footer,header,nav,section,main{display:flex}body{line-height:1}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:before,blockquote:after,q:before,q:after{content:\"\";content:none}table{border-collapse:collapse;border-spacing:0}input{-webkit-appearance:none;border-radius:0;width:100%}.MuiPaper-elevation{border-top-left-radius:16px !important;border-top-right-radius:16px !important}.MuiAlert-root{border-color:transparent !important}.MuiButton-root{text-transform:none !important;border-radius:12px !important;font-size:16px !important;font-weight:500 !important;box-shadow:none !important}.MuiButton-root.MuiButton-containedPrimary{background-color:#0066da}.MuiButton-root.MuiButton-textPrimary{color:#0066da}.App{display:flex;flex:1 1;min-height:100vh;overflow:auto;background:#f5faff}\n","@import \"src/styles/vars\"\n\n.container\n  height: 100%\n  display: flex\n  flex: 1\n  justify-content: center\n  background: $background-color\n  position: relative\n  padding: 16px\n  &.edit\n    background-color: white\n  .main\n    display: flex\n    text-align: center\n    width: 800px\n    flex-direction: column\n    @include mq($until: tablet)\n      width: 100%\n  .btn\n    position: absolute\n    bottom: 16px\n    width: 800px\n    @include mq($until: tablet)\n      width: calc(100% - 32px)\n  .btn-2\n    border-radius: 12px\n    position: absolute\n    bottom: 64px\n    width: 800px\n    @include mq($until: tablet)\n      width: calc(100% - 32px)\n.drawer-container\n  background-color: $background-color\n  padding: 29px 16px\n  .tittle\n    font-size: 16px\n    font-weight: 500\n  .description\n    font-size: 14px\n    padding-top: 16px\n  .stack\n    padding-top: 16px\n    .paper\n      display: flex\n      flex-direction: row\n      align-items: center\n      border-radius: 12px\n      padding: 12px\n      margin-top: 8px\n      cursor: pointer\n      .avatar\n        width: 44px\n        height: 44px\n        background-color: $grey-bg\n      span\n        padding-left: 12px\n        font-size: 16px\n        font-weight: 500\n  .btn-container\n    padding-top: 29px\n    display: flex\n    flex: 1\n    justify-content: center","#root\n  display: flex\n  flex: 1\n","$main-color: #85e8ff\n$background-color: #F5FAFF\n$hover-color: rgb(133 232 255 / 60%)\n$black-text: #001833\n$blue-primary: #0066DA\n$blue-ocean: #001833\n$grey-text: #9B9B9B\n$grey-bg: #F2F3F6","@charset \"UTF-8\"\n\n// Fixes an issue where Ruby locale is not set properly\n// See https://github.com/sass-mq/sass-mq/pull/10\n/// Base font size on the `<body>` element\n//\n// / Do not override this value, or things will break\n//\n// / @link https://github.com/sass-mq/sass-mq/issues/122\n// / @deprecated This setting will be removed in sass-mq v6.0.0\n// / @access private\n// / @type Number (unit)\n$mq-base-font-size: 16px !default\n\n/// Responsive mode\n//\n// / Set to `false` to enable support for browsers that do not support @media queries,\n// / (IE <= 8, Firefox <= 3, Opera <= 9)\n//\n// / You could create a stylesheet served exclusively to older browsers,\n// / where @media queries are rasterized\n//\n// / @example scss\n// /  // old-ie.scss\n// /  $mq-responsive: false;\n// /  @import 'main'; // @media queries in this file will be rasterized up to $mq-static-breakpoint\n// /                   // larger breakpoints will be ignored\n//\n// / @type Boolean\n// / @link https://github.com/sass-mq/sass-mq#responsive-mode-off Disabled responsive mode documentation\n$mq-responsive: true !default\n\n/// Breakpoint list\n//\n// / Name your breakpoints in a way that creates a ubiquitous language\n// / across team members. It will improve communication between\n// / stakeholders, designers, developers, and testers.\n//\n// / @type Map\n// / @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint Full documentation and examples\n$mq-breakpoints: (mobile: 320px, tablet: 768px, desktop: 980px, wide: 1300px) !default\n\n/// Static breakpoint (for fixed-width layouts)\n//\n// / Define the breakpoint from $mq-breakpoints that should\n// / be used as the target width for the fixed-width layout\n// / (i.e. when $mq-responsive is set to 'false') in a old-ie.scss\n//\n// / @example scss\n// /  // tablet-only.scss\n// /  //\n// /  // Ignore all styles above tablet breakpoint,\n// /  // and fix the styles (such as the layout) at tablet width\n// /  $mq-responsive: false;\n// /  $mq-static-breakpoint: tablet;\n// /  @import 'main'; // @media queries in this file will be rasterized up to tablet\n// /                   // larger breakpoints will be ignored\n//\n// / @type String\n// / @link https://github.com/sass-mq/sass-mq#adding-custom-breakpoints Full documentation and examples\n$mq-static-breakpoint: desktop !default\n\n/// Show breakpoints in the top right corner\n//\n// / If you want to display the currently active breakpoint in the top\n// / right corner of your site during development, add the breakpoints\n// / to this list, ordered by width. For example: (mobile, tablet, desktop).\n//\n// / @example scss\n// /   $mq-show-breakpoints: (mobile, tablet, desktop);\n// /   @import 'path/to/mq';\n//\n// / @type map\n$mq-show-breakpoints: () !default\n\n/// Customize the media type (for example: `@media screen` or `@media print`)\n// / By default sass-mq uses an \"all\" media type (`@media all and …`)\n//\n// / @type String\n// / @link https://github.com/sass-mq/sass-mq#changing-media-type Full documentation and examples\n$mq-media-type: all !default\n\n/// Convert pixels to ems\n//\n// / @param {Number} $px - value to convert\n// / @ignore @param {Number} $base-font-size [$mq-base-font-size] - `<body>` font size (deprecated)\n//\n// / @example scss\n// /  $font-size-in-ems: mq-px2em(16px);\n// /  p { font-size: mq-px2em(16px); }\n//\n// / @requires $mq-base-font-size\n// / @returns {Number}\n@function mq-px2em($px, $base-font-size: $mq-base-font-size)\n  @if $mq-base-font-size != 16px\n    @warn \"Overriding $mq-base-font-size will break things, see https://github.com/sass-mq/sass-mq/issues/122.\"\n\n  @if $base-font-size != 16px\n    @warn \"The $base-font-size argument will be removed in sass-mq v6.0.0, as overriding it breaks things, see https://github.com/sass-mq/sass-mq/issues/122.\"\n\n  @if unitless($px)\n    @warn \"Assuming #{$px} to be in pixels, attempting to convert it into pixels.\"\n\n    @return mq-px2em($px * 1px, $base-font-size)\n  @else if unit($px) == em\n    @return $px\n\n  @return $px / $base-font-size * 1em\n\n/// Get a breakpoint's width\n//\n// / @param {String} $name - Name of the breakpoint. One of $mq-breakpoints\n//\n// / @example scss\n// /  $tablet-width: mq-get-breakpoint-width(tablet);\n// /  @media (min-width: mq-get-breakpoint-width(desktop)) {}\n//\n// / @requires {Variable} $mq-breakpoints\n//\n// / @returns {Number} Value in pixels\n@function mq-get-breakpoint-width($name, $breakpoints: $mq-breakpoints)\n  @if map-has-key($breakpoints, $name)\n    @return map-get($breakpoints, $name)\n  @else\n    @warn \"Breakpoint #{$name} wasn't found in $breakpoints.\"\n\n/// Media Query mixin\n//\n// / @param {String | Boolean} $from [false] - One of $mq-breakpoints\n// / @param {String | Boolean} $until [false] - One of $mq-breakpoints\n// / @param {String | Boolean} $and [false] - Additional media query parameters\n// / @param {String} $media-type [$mq-media-type] - Media type: screen, print…\n//\n// / @ignore Undocumented API, for advanced use only:\n// / @ignore @param {Map} $breakpoints [$mq-breakpoints]\n// / @ignore @param {String} $static-breakpoint [$mq-static-breakpoint]\n//\n// / @content styling rules, wrapped into a @media query when $responsive is true\n//\n// / @requires {Variable} $mq-media-type\n// / @requires {Variable} $mq-breakpoints\n// / @requires {Variable} $mq-static-breakpoint\n// / @requires {function} mq-px2em\n// / @requires {function} mq-get-breakpoint-width\n//\n// / @link https://github.com/sass-mq/sass-mq#responsive-mode-on-default Full documentation and examples\n//\n// / @example scss\n// /  .element {\n// /    @include mq($from: mobile) {\n// /      color: red;\n// /    }\n// /    @include mq($until: tablet) {\n// /      color: blue;\n// /    }\n// /    @include mq(mobile, tablet) {\n// /      color: green;\n// /    }\n// /    @include mq($from: tablet, $and: '(orientation: landscape)') {\n// /      color: teal;\n// /    }\n// /    @include mq(950px) {\n// /      color: hotpink;\n// /    }\n// /    @include mq(tablet, $media-type: screen) {\n// /      color: hotpink;\n// /    }\n// /    // Advanced use:\n// /    $my-breakpoints: (L: 900px, XL: 1200px);\n// /    @include mq(L, $breakpoints: $my-breakpoints, $static-breakpoint: L) {\n// /      color: hotpink;\n// /    }\n// /  }\n=mq($from: false, $until: false, $and: false, $media-type: $mq-media-type, $breakpoints: $mq-breakpoints, $responsive: $mq-responsive, $static-breakpoint: $mq-static-breakpoint)\n  $min-width: 0\n  $max-width: 0\n  $media-query: \"\"\n\n  // From: this breakpoint (inclusive)\n  @if $from\n    @if type-of($from) == number\n      $min-width: mq-px2em($from)\n    @else\n      $min-width: mq-px2em(mq-get-breakpoint-width($from, $breakpoints))\n\n  // Until: that breakpoint (exclusive)\n  @if $until\n    @if type-of($until) == number\n      $max-width: mq-px2em($until)\n    @else\n      $max-width: mq-px2em(mq-get-breakpoint-width($until, $breakpoints)) - 0.01em\n\n  // Responsive support is disabled, rasterize the output outside @media blocks\n  // The browser will rely on the cascade itself.\n  @if $responsive == false\n    $static-breakpoint-width: mq-get-breakpoint-width($static-breakpoint, $breakpoints)\n    $target-width: mq-px2em($static-breakpoint-width)\n\n    // Output only rules that start at or span our target width\n    @if $and == false and $min-width <= $target-width and ($until == false or $max-width >= $target-width) and $media-type != \"print\"\n      @content\n  @else\n    @if $min-width != 0\n      $media-query: \"#{$media-query} and (min-width: #{$min-width})\"\n\n    @if $max-width != 0\n      $media-query: \"#{$media-query} and (max-width: #{$max-width})\"\n\n    @if $and\n      $media-query: \"#{$media-query} and #{$and}\"\n\n    // Remove unnecessary media query prefix 'all and '\n    @if $media-type == \"all\" and $media-query != \"\"\n      $media-type: \"\"\n      $media-query: str-slice(unquote($media-query), 6)\n\n    @media #{$media-type + $media-query}\n      @content\n\n/// Quick sort\n//\n// / @author Sam Richards\n// / @access private\n// / @param {List} $list - List to sort\n// / @returns {List} Sorted List\n@function _mq-quick-sort($list)\n  $less: ()\n  $equal: ()\n  $large: ()\n\n  @if length($list) > 1\n    $seed: nth($list, ceil(length($list) / 2))\n\n    @each $item in $list\n      @if $item == $seed\n        $equal: append($equal, $item)\n      @else if $item < $seed\n        $less: append($less, $item)\n      @else if $item > $seed\n        $large: append($large, $item)\n\n    @return join(join(_mq-quick-sort($less), $equal), _mq-quick-sort($large))\n\n  @return $list\n\n/// Sort a map by values (works with numbers only)\n//\n// / @access private\n// / @param {Map} $map - Map to sort\n// / @returns {Map} Map sorted by value\n@function _mq-map-sort-by-value($map)\n  $map-sorted: ()\n  $map-keys: map-keys($map)\n  $map-values: map-values($map)\n  $map-values-sorted: _mq-quick-sort($map-values)\n\n  // Reorder key/value pairs based on key values\n  @each $value in $map-values-sorted\n    $index: index($map-values, $value)\n    $key: nth($map-keys, $index)\n    $map-sorted: map-merge($map-sorted, ($key: $value))\n\n    // Unset the value in $map-values to prevent the loop\n    // from finding the same index twice\n    $map-values: set-nth($map-values, $index, 0)\n\n  @return $map-sorted\n\n/// Add a breakpoint\n//\n// / @param {String} $name - Name of the breakpoint\n// / @param {Number} $width - Width of the breakpoint\n//\n// / @requires {Variable} $mq-breakpoints\n//\n// / @example scss\n// /  @include mq-add-breakpoint(tvscreen, 1920px);\n// /  @include mq(tvscreen) {}\n=mq-add-breakpoint($name, $width)\n  $new-breakpoint: ($name: $width)\n  $mq-breakpoints: map-merge($mq-breakpoints, $new-breakpoint) !global\n  $mq-breakpoints: _mq-map-sort-by-value($mq-breakpoints) !global\n\n/// Show the active breakpoint in the top right corner of the viewport\n// / @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint\n//\n// / @param {List} $show-breakpoints [$mq-show-breakpoints] - List of breakpoints to show in the top right corner\n// / @param {Map} $breakpoints [$mq-breakpoints] - Breakpoint names and sizes\n//\n// / @requires {Variable} $mq-breakpoints\n// / @requires {Variable} $mq-show-breakpoints\n//\n// / @example scss\n// /  // Show breakpoints using global settings\n// /  @include mq-show-breakpoints;\n//\n// /  // Show breakpoints using custom settings\n// /  @include mq-show-breakpoints((L, XL), (S: 300px, L: 800px, XL: 1200px));\n=mq-show-breakpoints($show-breakpoints: $mq-show-breakpoints, $breakpoints: $mq-breakpoints)\n  body:before\n    background-color: #FCF8E3\n    border-bottom: 1px solid #FBEED5\n    border-left: 1px solid #FBEED5\n    color: #C09853\n    font: small-caption\n    padding: 3px 6px\n    pointer-events: none\n    position: fixed\n    right: 0\n    top: 0\n    z-index: 100\n\n    // Loop through the breakpoints that should be shown\n    @each $show-breakpoint in $show-breakpoints\n      $width: mq-get-breakpoint-width($show-breakpoint, $breakpoints)\n\n      +mq($show-breakpoint, $breakpoints: $breakpoints)\n        content: \"#{$show-breakpoint} ≥ #{$width} (#{mq-px2em($width)})\"\n\n@if length($mq-show-breakpoints) > 0\n  +mq-show-breakpoints","@import \"src/styles/vars\"\n\n.card-container\n  flex-direction: row\n  .card\n    overflow: hidden\n    border-radius: 16px\n    height: 216px\n    position: relative\n    display: flex\n    flex: 1\n    background-color: $blue-ocean\n    .title\n      display: flex\n      position: absolute\n      z-index: 10\n      left: 16px\n      top: 16px\n      color: white\n      font-weight: 500\n      font-size: 16px\n    .address\n      display: flex\n      flex-direction: row\n      color: white\n      border: 1px solid white\n      border-radius: 12px\n      position: absolute\n      z-index: 10\n      top: 16px\n      right: 16px\n      padding: 6px 6px\n      align-items: center\n      span\n        font-weight: 500\n        padding-left: 5px\n    .clouds\n      display: flex\n      position: absolute\n      right: 0\n      bottom: 0\n      height: 216px\n    .avatar\n      height: 100px\n      width: 100px\n      position: absolute\n      top: calc(50% - 50px)\n      left: calc(50% - 50px)\n      z-index: 10\n    .name-container\n      z-index: 11\n      position: absolute\n      top: calc(50% + 66px)\n      width: 100%\n      justify-content: center\n      text-align: center\n      flex: 1\n      .name\n        font-weight: 500\n        font-size: 16px\n    .bottom\n      width: 100%\n      position: absolute\n      bottom: 0\n      display: flex\n      flex: 1\n      height: 108px\n      background-color: $background-color\n  .user-data\n    flex-direction: column\n    display: flex\n    flex: 1\n    background: white\n    padding: 13px 0 13px 8px\n    border-radius: 16px\n    .row\n      display: flex\n      flex-direction: row\n      justify-content: space-between\n      padding-right: 16px\n      .title\n        font-size: 14px\n        color: $grey-text\n",".not-registered-container\n  display: flex\n  align-items: baseline\n  flex-direction: column\n  padding: 16px 0\n  .not-connected\n    font-size: 16px\n    padding: 0 16px\n    line-height: 24px\n  h1\n    font-size: 16px\n    font-weight: 500\n    padding: 16px 0\n  div\n    font-size: 16px\n  .list\n    list-style-type: disc\n    padding-left: 32px\n    li\n      text-align: left\n      font-size: 16px\n      padding: 2px 0\n","@import \"src/styles/colors\"\n\n.card-container\n  position: relative\n  flex-direction: row\n  padding-bottom: 50px\n  overflow: auto\n  .back-icon\n    position: absolute\n    top: 0\n    left: 0\n  .image-container\n    cursor: pointer\n    padding-top: 56px\n    display: flex\n    flex: 1\n    justify-content: center\n    align-items: center\n    flex-direction: column\n    .change-photo\n      cursor: pointer\n      padding-top: 16px\n      color: $blue-primary\n      font-weight: 500\n  .form-container\n    display: flex\n    flex: 1\n    flex-direction: column\n    .MuiTextField-root,\n    .MuiFormControl-root\n      margin: 16px 0","@import \"src/styles/colors\"\n\n.drawer-container\n  background-color: $background-color\n  padding: 29px 16px 16px\n  display: flex\n  flex-direction: column\n  .tittle\n    font-size: 16px\n    font-weight: 500\n  .description\n    font-size: 14px\n    padding-top: 16px\n    &.medium\n      font-size: 16px\n      padding-top: 56px\n  .stack\n    padding-top: 16px\n    .paper\n      display: flex\n      flex-direction: row\n      align-items: center\n      border-radius: 12px\n      padding: 12px\n      margin-top: 8px\n      cursor: pointer\n      .avatar\n        width: 44px\n        height: 44px\n        background-color: $grey-bg\n      span\n        padding-left: 12px\n        font-size: 16px\n        font-weight: 500\n  .btn-container\n    padding-top: 29px\n    display: flex\n    flex: 1\n    justify-content: end\n    flex-direction: column\n    button:nth-child(2)\n      padding-top: 16px","@import \"./colors\"\n\n*, *:before, *:after\n  box-sizing: border-box\n\nhtml, body, div, span, object, iframe, figure, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, code, em, img, small, strike, strong, sub, sup, tt, b, u, i, ol, ul, li, fieldset, form, label, table, caption, tbody, tfoot, thead, tr, th, td, main, canvas, embed, footer, header, nav, section, video\n  margin: 0\n  padding: 0\n  border: 0\n  font: inherit\n  vertical-align: baseline\n  text-rendering: optimizeLegibility\n  -webkit-font-smoothing: antialiased\n  font-size: 14px\n  text-size-adjust: none\n  font-family: Roboto\n\n/* Chrome, Safari, Edge, Opera */\ninput::-webkit-outer-spin-button,\ninput::-webkit-inner-spin-button\n  -webkit-appearance: none\n  margin: 0\n\n/* Firefox */\ninput[type=number]\n  -moz-appearance: textfield\n\n\nfooter, header, nav, section, main\n  display: flex\n\nbody\n  line-height: 1\n\nol, ul\n  list-style: none\n\nblockquote, q\n  quotes: none\n\nblockquote:before, blockquote:after, q:before, q:after\n  content: ''\n  content: none\n\ntable\n  border-collapse: collapse\n  border-spacing: 0\n\ninput\n  -webkit-appearance: none\n  border-radius: 0\n  width: 100%\n\n","@import \"colors\"\n\n.MuiPaper-elevation\n  border-top-left-radius: 16px !important\n  border-top-right-radius: 16px !important\n\n.MuiAlert-root\n  border-color: transparent !important\n\n.MuiButton-root\n  text-transform: none !important\n  border-radius: 12px !important\n  font-size: 16px !important\n  font-weight: 500 !important\n  box-shadow: none !important\n  &.MuiButton-containedPrimary\n    background-color: $blue-primary\n  &.MuiButton-textPrimary\n    color: $blue-primary","// global\n\n@import \"./styles/index\"\n\n.App\n  display: flex\n  flex: 1\n  min-height: 100vh\n  overflow: auto\n  background: $background-color\n"]}