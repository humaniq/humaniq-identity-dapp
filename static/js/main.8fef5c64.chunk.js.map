{"version":3,"sources":["translations/i18n.ts","utils/textUtils.ts","utils/network.ts","services/apiService/apiService.ts","stores/appStore/alertStore.ts","constants/general.ts","stores/appStore/appStore.ts","utils/alert.ts","stores/userStore.ts","screens/home/HomeViewModel.ts","static/images/clouds.svg","static/images/check.svg","utils/address.ts","components/humaniq-id-card/HumaniqIdCard.tsx","utils/hoc.tsx","components/not-registered-message/NotRegisteredMessage.tsx","components/humaniq-id-form/HumaniqIdForm.tsx","static/images/humaniq-logo.svg","static/images/wallet-connect-logo.svg","static/images/web3-logo.svg","components/dialogs/ConnectDialog.tsx","components/dialogs/DisconnectDialog.tsx","screens/home/Home.tsx","utils/routes.ts","screens/404/404.tsx","App.tsx","index.tsx","utils/logcat.ts","constants/api.ts","stores/providerStore.ts"],"names":["i18n","use","LanguageDetector","initReactI18next","init","resources","en","translation","changeLanguage","isEmpty","str","trim","formatRoute","routePath","params","reSplatParams","reSlashTokens","tokens","paramName","hasOwnProperty","paramValue","val","Object","prototype","toString","call","i","replace","match","tokenName","encodeURIComponent","paramRegex","RegExp","g1","g2","paramRegexRR4","token","ALERT_TYPE","ApiService","axios","baseURL","API_HUMANIQ_URL","headers","create","interceptors","response","isOk","error","Promise","resolve","get","path","config","post","body","put","DATE_FORMAT","AlertStore","displayAlert","alertMessage","alertType","SUCCESS","alertClick","alertClose","event","reason","makeAutoObservable","this","undefined","autoBind","app","alert","setAlert","message","type","customParseFormat","require","dayjs","extend","User","firstName","lastName","country","city","birthDate","firstNameError","lastNameError","countryError","cityError","birthDateError","photoURI","isFetching","isRegistered","api","setFirstName","value","setLastName","setCountry","setCity","setBirthDate","length","isValid","fetchProfile","a","HUMANIQ_ROUTES","INTROSPECT","GET_SIGNUP_WALLET","wallet","getProviderStore","currentAccount","result","setProfileUser","data","onReset","updatePhoto","file","PHOTO","POST_PHOTO","url","Logcat","info","API_HUMANIQ_TOKEN","action","t","isAnyFieldEmpty","timeStamp","Date","getTime","request","personalMessageRequest","query","addressFrom","typeOperation","typeMessage","payload","format","signature","DAPP","POST_PROFILE_UPDATE","setTimeout","ERROR","test","UserStore","HomeViewModel","galleryRef","isEditMode","initialized","backClick","user","ref","ETHProvider","reaction","toggleEditOrSave","onSubmit","openFileExplorer","current","click","onFileChoose","preventDefault","target","files","toggleDialogOrDisconnectWallet","toggleDisconnectDialog","connectDialog","renderShortAddress","address","checksummedAddress","toChecksumAddress","slice","substring","Store","Component","Root","styled","theme","width","typography","body2","marginTop","spacing","HumaniqIdCard","observer","fields","name","verified","photoUrl","loading","className","Avatar","src","Check","sx","height","bgcolor","padding","Clouds","Skeleton","variant","map","f","Divider","NotRegisteredMessage","isConnected","TextMaskCustom","React","forwardRef","props","onChange","other","mask","inputRef","onAccept","overwrite","HumaniqIdForm","onBackClick","accept","id","style","display","IconButton","onClick","fontSize","color","TextField","label","e","helperText","FormControl","InputLabel","htmlFor","OutlinedInput","getBirthDate","inputComponent","FormHelperText","ConnectDialog","SwipeableDrawer","anchor","open","onClose","onOpen","toggleConnectDialog","borderRadius","Box","minHeight","Stack","Paper","elevation","setProvider","PROVIDERS","WEB3","alt","HumaniqLogo","WC","WCLogo","Web3Logo","Button","DisconnectDialog","disconnectDialog","disconnect","Home","view","store","inputGalleryRef","useRef","useEffect","fullName","disabled","useMemo","routes","home","NotFound","window","Buffer","b","Alert","borderColor","App","element","Snackbar","autoHideDuration","backgroundColor","severity","configure","enforceActions","ReactDOM","render","document","getElementById","console","log","debug","msg","err","optionalParams","warn","POST_SIGNUP_CHECK","POST_SIGNUP_CONFIRM","GET_SIGNUP_OBJECT","GET_SIGNUP_PHOTO","POST_PROFILE_PHOTO_UPDATE","rpc","ProviderStore","hasProvider","currentProvider","chainId","connectedProvider","provider","WalletConnectProvider","enable","initProvider","ethereum","connectToWeb3","localStorage","setItem","on","accounts","getItem","method","from","connect","removeItem"],"mappings":"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","file":"static/js/main.8fef5c64.chunk.js","sourcesContent":["import i18n from \"i18next\";\r\nimport { initReactI18next } from \"react-i18next\";\r\nimport LanguageDetector from \"i18next-browser-languagedetector\";\r\n\r\nimport en from \"./en/en.json\";\r\n\r\ni18n\r\n  .use(LanguageDetector)\r\n  .use(initReactI18next)\r\n  .init({\r\n    resources: {\r\n      en: {\r\n        translation: en,\r\n      },\r\n    },\r\n  });\r\n\r\ni18n.changeLanguage(\"en\");\r\n","export const capitalize = (str?: string) => (str && str.charAt(0).toUpperCase() + str.slice(1)) || false\r\n\r\nexport const toUpperCase = (str?: string) => typeof str === 'string' ? str.toUpperCase() : ''\r\n\r\nexport const toLowerCase = (str?: string) => typeof str === 'string' ? str.toLowerCase() : ''\r\n\r\nexport const isEmpty = (str?: string) => typeof str === 'string' ? str.trim() === '' : true","export const isNotAuthorized = (code: number) => code === 401;\nexport const isNotAllowed = (code: number) => code === 403;\nexport const isOk = (code: number) => code >= 200 && code <= 202;\n\nfunction toArray(val: string) {\n  return Object.prototype.toString.call(val) !== \"[object Array]\" ? [val] : val;\n}\n\nexport function formatRoute(routePath: string, params: any) {\n  const reRepeatingSlashes = /\\/+/g; // \"/some//path\"\n  const reSplatParams = /\\*{1,2}/g; // \"/some/*/complex/**/path\"\n  const reResolvedOptionalParams = /\\(([^:*?#]+?)\\)/g; // \"/path/with/(resolved/params)\"\n  const reUnresolvedOptionalParams = /\\([^:?#]*:[^?#]*?\\)/g; // \"/path/with/(groups/containing/:unresolved/optional/:params)\"\n  const reUnresolvedOptionalParamsRR4 = /(\\/[^/]*\\?)/g; // \"/path/with/groups/containing/unresolved?/optional/params?\"\n  const reTokens = /<(.*?)>/g;\n  const reSlashTokens = /_!slash!_/g;\n\n  let tokens: any = {};\n\n  if (params) {\n    for (let paramName in params) {\n      if (params.hasOwnProperty(paramName)) {\n        let paramValue = params[paramName];\n\n        if (paramName === \"splat\") {\n          // special param name in RR, used for \"*\" and \"**\" placeholders\n          paramValue = toArray(paramValue); // when there are multiple globs, RR defines \"splat\" param as array.\n          let i = 0;\n          routePath = routePath.replace(reSplatParams, (match) => {\n            let val = paramValue[i++];\n            if (val == null) {\n              return \"\";\n            } else {\n              let tokenName = `splat${i}`;\n              tokens[tokenName] =\n                match === \"*\"\n                  ? encodeURIComponent(val)\n                  : // don't escape slashes for double star, as \"**\" considered greedy by RR spec\n                    encodeURIComponent(\n                      val.toString().replace(/\\//g, \"_!slash!_\")\n                    ).replace(reSlashTokens, \"/\");\n              return `<${tokenName}>`;\n            }\n          });\n        } else {\n          // Rougly resolve all named placeholders.\n          // Cases:\n          // - \"/path/:param\"\n          // - \"/path/(:param)\"\n          // - \"/path(/:param)\"\n          // - \"/path(/:param/):another_param\"\n          // - \"/path/:param(/:another_param)\"\n          // - \"/path(/:param/:another_param)\"\n          const paramRegex = new RegExp(\n            \"(/|\\\\(|\\\\)|^):\" + paramName + \"(/|\\\\)|\\\\(|$)\"\n          );\n          routePath = routePath.replace(paramRegex, (match, g1, g2) => {\n            tokens[paramName] = encodeURIComponent(paramValue);\n            return `${g1}<${paramName}>${g2}`;\n          });\n          const paramRegexRR4 = new RegExp(\"(.*):\" + paramName + \"\\\\?(.*)\");\n          routePath = routePath.replace(paramRegexRR4, (match, g1, g2) => {\n            tokens[paramName] = encodeURIComponent(paramValue);\n            return `${g1}<${paramName}>${g2}`;\n          });\n        }\n      }\n    }\n  }\n\n  return (\n    routePath\n      // Remove braces around resolved optional params (i.e. \"/path/(value)\")\n      .replace(reResolvedOptionalParams, \"$1\")\n      // Remove all sequences containing at least one unresolved optional param\n      .replace(reUnresolvedOptionalParams, \"\")\n      // Remove all sequences containing at least one unresolved optional param in RR4\n      .replace(reUnresolvedOptionalParamsRR4, \"\")\n      // After everything related to RR syntax is removed, insert actual values\n      .replace(reTokens, (match, token) => tokens[token])\n      // Remove repeating slashes\n      .replace(reRepeatingSlashes, \"/\")\n      // Always remove ending slash for consistency\n      .replace(/\\/+$/, \"\")\n      // If there was a single slash only, keep it\n      .replace(/^$/, \"/\")\n  );\n}\n","import axios, { AxiosInstance, AxiosRequestConfig, AxiosResponse } from \"axios\";\nimport { API_HUMANIQ_URL } from \"../../constants/api\";\nimport { formatRoute } from \"../../utils/network\";\n\nexport interface ApiServiceResponse<T> extends AxiosResponse<T> {\n  isOk: boolean;\n}\n\nexport class ApiService {\n  protected axios: AxiosInstance;\n\n  init = (baseURL: string = API_HUMANIQ_URL, headers = {}) => {\n    this.axios = axios.create({ baseURL, headers });\n\n    this.axios.interceptors.response.use(\n      function (response) {\n        return { ...response, isOk: true };\n      },\n      function (error) {\n        return Promise.resolve({ ...error, isOk: false }); // Promise.reject(error);\n      }\n    );\n  };\n\n  get = <T>(path: string, params?: any, config?: AxiosRequestConfig) =>\n    this.axios.get(formatRoute(path, params), config) as Promise<\n      ApiServiceResponse<T>\n    >;\n\n  post = <T>(\n    path: string,\n    body?: any,\n    params?: any,\n    config?: AxiosRequestConfig\n  ) =>\n    this.axios.post(\n      params ? formatRoute(path, params) : path,\n      body,\n      config\n    ) as Promise<ApiServiceResponse<T>>;\n\n  put = <T>(\n    path: string,\n    body?: any,\n    params?: any,\n    config?: AxiosRequestConfig\n  ) =>\n    this.axios.put(\n      params ? formatRoute(path, params) : path,\n      body,\n      config\n    ) as Promise<ApiServiceResponse<T>>;\n}\n","import { makeAutoObservable } from \"mobx\";\r\nimport React from \"react\";\r\n\r\nexport enum ALERT_TYPE {\r\n  SUCCESS = \"success\",\r\n  ERROR = \"error\",\r\n  WARNING = \"warning\",\r\n  INFO = \"info\",\r\n}\r\n\r\nexport class AlertStore {\r\n  constructor() {\r\n    makeAutoObservable(this, undefined, { autoBind: true });\r\n  }\r\n\r\n  displayAlert = false;\r\n  alertMessage = \"\";\r\n  alertType: ALERT_TYPE = ALERT_TYPE.SUCCESS;\r\n\r\n  alertClick = () => {\r\n    this.displayAlert = true;\r\n  };\r\n\r\n  alertClose = (event?: React.SyntheticEvent | Event, reason?: string) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    this.displayAlert = false;\r\n  };\r\n}\r\n","export const DATE_FORMAT = `DD\\/MM\\/YYYY`;\r\n","import { makeAutoObservable } from \"mobx\";\r\nimport { AlertStore } from \"./alertStore\";\r\n\r\nexport class AppStore {\r\n  constructor() {\r\n    makeAutoObservable(this, undefined, { autoBind: true });\r\n  }\r\n\r\n  alert = new AlertStore();\r\n}\r\n\r\nexport const app = new AppStore();\r\n","import { app } from \"../stores/appStore/appStore\";\r\nimport { ALERT_TYPE } from \"../stores/appStore/alertStore\";\r\n\r\nexport const setAlert = (\r\n  message: string,\r\n  type: ALERT_TYPE = ALERT_TYPE.SUCCESS\r\n) => {\r\n  app.alert.alertType = type;\r\n  app.alert.alertMessage = message;\r\n  app.alert.displayAlert = true;\r\n};\r\n","import { action, makeAutoObservable } from \"mobx\";\nimport { getProviderStore } from \"../App\";\nimport { isEmpty } from \"../utils/textUtils\";\nimport Logcat from \"../utils/logcat\";\nimport { t } from \"i18next\";\nimport { ApiService } from \"../services/apiService/apiService\";\nimport {\n  API_HUMANIQ_TOKEN,\n  API_HUMANIQ_URL,\n  HUMANIQ_ROUTES,\n} from \"../constants/api\";\nimport { UserProfileResponse } from \"../services/apiService/responses\";\nimport dayjs from \"dayjs\";\nimport { DATE_FORMAT } from \"../constants/general\";\nimport { ALERT_TYPE } from \"./appStore/alertStore\";\nimport { setAlert } from \"../utils/alert\";\n\nconst customParseFormat = require(\"dayjs/plugin/customParseFormat\");\ndayjs.extend(customParseFormat);\n\nexport class User {\n  firstName = \"\";\n  lastName = \"\";\n  country = \"\";\n  city = \"\";\n  birthDate = \"\";\n\n  firstNameError?: string;\n  lastNameError?: string;\n  countryError?: string;\n  cityError?: string;\n  birthDateError?: string;\n\n  photoURI = \"\";\n  isFetching = false;\n  isRegistered: boolean = false;\n\n  api: ApiService;\n\n  constructor() {\n    makeAutoObservable(this);\n    this.api = new ApiService();\n    this.api.init(API_HUMANIQ_URL, { \"x-auth-token\": API_HUMANIQ_TOKEN });\n  }\n\n  get getBirthDate() {\n    return this.birthDate;\n  }\n\n  get fullName() {\n    return this.firstName || this.lastName\n      ? `${this.firstName} ${this.lastName}`\n      : \"User Name\";\n  }\n\n  setFirstName = (value: string) => {\n    this.firstNameError = undefined;\n    this.firstName = value;\n  };\n\n  setLastName = (value: string) => {\n    this.lastNameError = undefined;\n    this.lastName = value;\n  };\n\n  setCountry = (value: string) => {\n    this.countryError = undefined;\n    this.country = value;\n  };\n\n  setCity = (value: string) => {\n    this.cityError = undefined;\n    this.city = value;\n  };\n\n  setBirthDate = (value: string) => {\n    this.birthDate = value;\n    this.birthDateError =\n      this.birthDate.length === 10 &&\n      !dayjs(this.birthDate, DATE_FORMAT, true).isValid()\n        ? \"Incorrect date format\"\n        : undefined;\n  };\n\n  fetchProfile = async () => {\n    // some profile fetching\n    this.isFetching = true;\n    const result = await this.api.get(\n      HUMANIQ_ROUTES.INTROSPECT.GET_SIGNUP_WALLET,\n      { wallet: getProviderStore.currentAccount }\n    );\n    if (result.isOk) {\n      this.isRegistered = true;\n      this.setProfileUser(result.data as any);\n    } else {\n      this.isRegistered = false;\n      this.onReset();\n    }\n    this.isFetching = false;\n  };\n\n  updatePhoto = async (file: File) => {\n    const result = await this.api.post<{ url: string }>(\n      HUMANIQ_ROUTES.PHOTO.POST_PHOTO,\n      file,\n      {},\n      {\n        headers: {\n          \"Content-Type\": file.type,\n        },\n      }\n    );\n    if (result.isOk) {\n      this.photoURI = result.data.url;\n    } else {\n      Logcat.info(\"ERROR\", result);\n    }\n  };\n\n  @action\n  onSubmit = async () => {\n    if (isEmpty(this.firstName)) {\n      this.firstNameError = t(\"emptyField\");\n    }\n\n    if (isEmpty(this.lastName)) {\n      this.lastNameError = t(\"emptyField\");\n    }\n\n    if (isEmpty(this.country)) {\n      this.countryError = t(\"emptyField\");\n    }\n\n    if (isEmpty(this.city)) {\n      this.cityError = t(\"emptyField\");\n    }\n\n    if (isEmpty(this.birthDate)) {\n      this.birthDateError = t(\"emptyField\");\n    }\n\n    if (this.isAnyFieldEmpty) {\n      return;\n    }\n\n    const timeStamp = new Date().getTime();\n    const request = `ADDRESS ${getProviderStore.currentAccount} UPDATE PERSONAL INFO TIMESTAMP ${timeStamp}`;\n    try {\n      const result = await getProviderStore.personalMessageRequest(request);\n      if (result) {\n        const body = {\n          query: {\n            addressFrom: getProviderStore.currentAccount,\n            timeStamp,\n            typeOperation: \"UPSERT\",\n            typeMessage: \"humaniqIdentity\",\n            payload: {\n              lastName: this.lastName,\n              firstName: this.firstName,\n              birthDate: dayjs(this.birthDate, DATE_FORMAT).format(\n                \"DD.MM.YYYY\"\n              ),\n              city: this.city,\n              country: this.country,\n              photoURI: this.photoURI,\n            },\n          },\n          signature: result,\n        };\n\n        const response = await this.api.post(\n          HUMANIQ_ROUTES.DAPP.POST_PROFILE_UPDATE,\n          body\n        );\n        if (response.isOk) {\n          setTimeout(() => {\n            setAlert(\"Your profile successfuly updated\");\n          }, 2000);\n          return true;\n        } else {\n          setAlert(\"Error\", ALERT_TYPE.ERROR);\n          Logcat.info(\"ERROR\", response);\n          return false;\n        }\n      }\n    } catch (e) {\n      setAlert(\"Error\", ALERT_TYPE.ERROR);\n      Logcat.info(e);\n    }\n  };\n\n  @action\n  setProfileUser = (test: UserProfileResponse) => {\n    this.firstName = test.firstName;\n    this.lastName = test.lastName;\n    this.country = test.country;\n    this.city = test.city;\n    this.birthDate = test.birthDate;\n    this.photoURI = test.photoURI;\n  };\n\n  @action\n  onReset = () => {\n    this.firstName = \"\";\n    this.lastName = \"\";\n    this.country = \"\";\n    this.city = \"\";\n    this.birthDate = \"\";\n    this.photoURI = \"\";\n  };\n\n  get isAnyFieldEmpty() {\n    return (\n      isEmpty(this.firstName) ||\n      isEmpty(this.lastName) ||\n      isEmpty(this.country) ||\n      isEmpty(this.city) ||\n      isEmpty(this.birthDate) ||\n      this.birthDate.length !== 10 ||\n      !!this.birthDateError\n    );\n  }\n}\n\nexport const UserStore = new User();\n","import { RefObject } from \"react\";\nimport { makeAutoObservable, reaction } from \"mobx\";\nimport { UserStore, UserStore as user } from \"../../stores/userStore\";\nimport { ETHProvider } from \"../../stores/providerStore\";\nimport { getProviderStore } from \"../../App\";\nimport Logcat from \"../../utils/logcat\";\n\nexport class HomeViewModel {\n  galleryRef?: RefObject<HTMLInputElement>;\n\n  isEditMode = false;\n  initialized = false;\n\n  constructor() {\n    makeAutoObservable(this, {}, { autoBind: true });\n  }\n\n  backClick = async () => {\n    user.onReset();\n    this.isEditMode = false;\n    await user.fetchProfile();\n  };\n\n  init = async (ref?: RefObject<HTMLInputElement>) => {\n    this.galleryRef = ref;\n    ETHProvider.currentAccount && (await user.fetchProfile());\n    reaction(\n      () => ETHProvider.currentAccount,\n      async (val) => {\n        if (val) {\n          await user.fetchProfile();\n        } else {\n          UserStore.onReset();\n        }\n      }\n    );\n    this.initialized = true;\n  };\n\n  toggleEditOrSave = async () => {\n    if (this.isEditMode) {\n      const result = await user.onSubmit();\n      if (result) {\n        this.isEditMode = !this.isEditMode;\n      }\n    } else {\n      this.isEditMode = !this.isEditMode;\n    }\n  };\n\n  openFileExplorer = () => {\n    this.galleryRef?.current?.click();\n  };\n\n  onFileChoose = async (event: any) => {\n    event.preventDefault();\n    await user.updatePhoto(event.target.files[0]);\n  };\n\n  toggleDialogOrDisconnectWallet = () => {\n    if (!getProviderStore.currentAccount) {\n      getProviderStore.connectDialog = !getProviderStore.connectDialog;\n    } else {\n      this.isEditMode = false;\n      getProviderStore.toggleDisconnectDialog();\n      // getProviderStore.disconnect();\n    }\n  };\n}\n","export default __webpack_public_path__ + \"static/media/clouds.db8c3472.svg\";","export default __webpack_public_path__ + \"static/media/check.e0144003.svg\";","import { toChecksumAddress } from \"ethereumjs-util\";\n\n/**\n * Returns short address format\n *\n * @param {String} address - String corresponding to an address\n * @param {Number} chars - Number of characters to show at the end and beginning.\n * Defaults to 4.\n * @returns {String} - String corresponding to short address format\n */\nexport function renderShortAddress(address: string, chars = 4) {\n  if (!address) return address;\n  const checksummedAddress = toChecksumAddress(address);\n  // return `${checksummedAddress.substr(0, chars + 2)}...${checksummedAddress.substr(-chars)}`;\n  return checksummedAddress\n    ? `${checksummedAddress.slice(0, 4)}...${checksummedAddress.substring(\n        checksummedAddress.length - 4\n      )}`\n    : \"\";\n}\n","import React from \"react\";\r\nimport \"./styles.sass\";\r\nimport { Avatar, Divider, Skeleton, styled } from \"@mui/material\";\r\nimport Clouds from \"../../static/images/clouds.svg\";\r\nimport Check from \"../../static/images/check.svg\";\r\nimport { renderShortAddress } from \"../../utils/address\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nconst Root = styled(\"div\")(({ theme }) => ({\r\n  width: \"100%\",\r\n  ...theme.typography.body2,\r\n  \"& > :not(style) + :not(style)\": {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport interface CryptoCardProps {\r\n  fields?: Array<Array<string>>;\r\n  name?: string;\r\n  address?: string;\r\n  verified?: boolean;\r\n  photoUrl?: string;\r\n  loading: boolean;\r\n}\r\n\r\nexport const HumaniqIdCard: React.FC<CryptoCardProps> = observer(\r\n  ({\r\n    fields = [\r\n      [\"Date of birth\", \"...........\"],\r\n      [\"Country\", \"...........\"],\r\n      [\"City\", \"...........\"],\r\n    ],\r\n    name = \"User name\",\r\n    address,\r\n    verified = false,\r\n    photoUrl = \"\",\r\n    loading = false,\r\n  }) => {\r\n    return (\r\n      <div className={\"card-container\"}>\r\n        <div className={\"card\"}>\r\n          <div className={\"title\"}>Humaniq ID</div>\r\n          <div className={\"address\"}>\r\n            {verified && (\r\n              <Avatar\r\n                src={Check}\r\n                sx={{\r\n                  width: 14,\r\n                  height: 14,\r\n                  bgcolor: \"white\",\r\n                  padding: \"3px\",\r\n                }}\r\n              />\r\n            )}\r\n            <span>\r\n              {\" \"}\r\n              {address ? renderShortAddress(address) : \"...........\"}{\" \"}\r\n            </span>\r\n          </div>\r\n          <img className={\"clouds\"} src={Clouds} />\r\n          {loading ? (\r\n            <Skeleton variant=\"circular\">\r\n              <Avatar className={\"avatar\"} />\r\n            </Skeleton>\r\n          ) : (\r\n            <Avatar variant={\"circular\"} className={\"avatar\"} src={photoUrl} />\r\n          )}\r\n          <div className={\"name-container\"}>\r\n            <span className={\"name\"}>{name}</span>\r\n          </div>\r\n          <div className={\"bottom\"}></div>\r\n        </div>\r\n        <div className={\"user-data\"}>\r\n          <Root>\r\n            {fields &&\r\n              fields.length > 0 &&\r\n              fields.map((f, i) => {\r\n                return (\r\n                  <div key={i}>\r\n                    <div className={\"row\"}>\r\n                      <div className={\"title\"}>{f[0]}</div>\r\n                      <div className={\"value\"}>{f[1] || \"...........\"}</div>\r\n                    </div>\r\n                    {i !== fields.length - 1 && <Divider />}\r\n                  </div>\r\n                );\r\n              })}\r\n          </Root>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n","import React, { useMemo } from \"react\";\n\nexport const withStore =\n  (Store: any, Component: any) =>\n  ({ ...props }) => {\n    const store = useMemo(() => {\n      return new Store();\n    }, []);\n\n    return <Component store={store} {...props} />;\n  };\n","import React from \"react\";\nimport \"./styles.sass\";\nimport { t } from \"i18next\";\n\nexport interface NotRegisteredMessageProps {\n  isConnected: boolean;\n  isRegistered: boolean;\n}\n\nexport const NotRegisteredMessage: React.FC<NotRegisteredMessageProps> = ({\n  isConnected = false,\n  isRegistered = false,\n}) => {\n  return (\n    <div className={\"not-registered-container\"}>\n      {isConnected && !isRegistered && (\n        <>\n          <h1>{t(\"notRegistered.title\")}</h1>\n          <div>{t(\"notRegistered.description\")}</div>\n          <ul className={\"list\"}>\n            <li>{t(\"notRegistered.one\")}</li>\n            <li>{t(\"notRegistered.two\")}</li>\n            <li>{t(\"notRegistered.three\")}</li>\n          </ul>\n        </>\n      )}\n      {!isConnected && (\n        <div className={\"not-connected\"}>{t(\"notConnectedTitle\")}</div>\n      )}\n    </div>\n  );\n};\n","import \"./styles.sass\";\nimport React from \"react\";\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\nimport {\n  Avatar,\n  FormControl,\n  FormHelperText,\n  IconButton,\n  InputLabel,\n  OutlinedInput,\n  TextField,\n} from \"@mui/material\";\nimport { User } from \"../../stores/userStore\";\nimport { t } from \"i18next\";\nimport { observer } from \"mobx-react\";\nimport { IMaskInput } from \"react-imask\";\n\ninterface CustomProps {\n  onChange: (event: { target: { name: string; value: string } }) => void;\n  name: string;\n}\n\nconst TextMaskCustom = React.forwardRef<HTMLElement, CustomProps>(\n  function TextMaskCustom(props, ref) {\n    const { onChange, ...other } = props;\n    return (\n      <IMaskInput\n        {...other}\n        mask=\"00/00/0000\"\n        inputRef={ref as any}\n        onAccept={(value: any) =>\n          onChange({ target: { name: props.name, value } })\n        }\n        overwrite\n      />\n    );\n  }\n);\n\nexport interface HumaniqIdFormProps {\n  user: User;\n  onBackClick: () => void;\n  inputRef: any;\n  onFileChoose: (val: any) => any;\n  openFileExplorer: (val: any) => any;\n}\n\nexport const HumaniqIdForm: React.FC<HumaniqIdFormProps> = observer(\n  ({ user, onBackClick, inputRef, onFileChoose, openFileExplorer }) => {\n    return (\n      <div className={\"card-container\"}>\n        <input\n          onChange={onFileChoose}\n          accept=\"image/png, image/jpeg\"\n          type=\"file\"\n          id={\"file\"}\n          ref={inputRef}\n          style={{ display: \"none\" }}\n        />\n        <IconButton className={\"back-icon\"} onClick={onBackClick}>\n          <ArrowBackIcon sx={{ fontSize: 28, color: \"#001833\" }} />\n        </IconButton>\n        <div className={\"image-container\"} onClick={openFileExplorer}>\n          <Avatar sx={{ width: 80, height: 80 }} src={user.photoURI} />\n          <div className={\"change-photo\"}>Change profile photo</div>\n        </div>\n        <div className={\"form-container\"}>\n          <TextField\n            label={t(\"firstName\")}\n            value={user.firstName}\n            onChange={(e) => {\n              user.setFirstName(e.target.value);\n            }}\n            error={!!user.firstNameError}\n            helperText={user.firstNameError}\n          />\n          <TextField\n            label={t(\"lastName\")}\n            value={user.lastName}\n            onChange={(e) => user.setLastName(e.target.value)}\n            error={!!user.lastNameError}\n            helperText={user.lastNameError}\n          />\n          <FormControl variant=\"outlined\">\n            <InputLabel\n              variant={\"outlined\"}\n              htmlFor=\"formatted-text-mask-input\"\n              error={!!user.birthDateError}\n            >\n              {t(\"birthDate\")}\n            </InputLabel>\n            <OutlinedInput\n              label={t(\"birthDate\")}\n              id=\"formatted-text-mask-input\"\n              value={user.getBirthDate}\n              onChange={(e) => user.setBirthDate(e.target.value)}\n              inputComponent={TextMaskCustom as any}\n              error={!!user.birthDateError}\n            />\n            <FormHelperText error={!!user.birthDateError}>\n              {user.birthDateError}\n            </FormHelperText>\n          </FormControl>\n          <TextField\n            label={t(\"country\")}\n            value={user.country}\n            onChange={(e) => user.setCountry(e.target.value)}\n            error={!!user.countryError}\n            helperText={user.countryError}\n          />\n          <TextField\n            label={t(\"city\")}\n            value={user.city}\n            onChange={(e) => user.setCity(e.target.value)}\n            error={!!user.cityError}\n            helperText={user.cityError}\n          />\n        </div>\n      </div>\n    );\n  }\n);\n","export default __webpack_public_path__ + \"static/media/humaniq-logo.cb2c62db.svg\";","export default __webpack_public_path__ + \"static/media/wallet-connect-logo.6fa61a47.svg\";","export default __webpack_public_path__ + \"static/media/web3-logo.9ae2b06d.svg\";","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport { getProviderStore } from \"../../App\";\nimport {\n  Avatar,\n  Box,\n  Button,\n  Paper,\n  Stack,\n  SwipeableDrawer,\n} from \"@mui/material\";\nimport { t } from \"i18next\";\nimport { PROVIDERS } from \"../../stores/providerStore\";\nimport HumaniqLogo from \"../../static/images/humaniq-logo.svg\";\nimport WCLogo from \"../../static/images/wallet-connect-logo.svg\";\nimport Web3Logo from \"../../static/images/web3-logo.svg\";\nimport \"./styles.sass\";\n\nexport interface ConnectDialogProps {}\n\nexport const ConnectDialog: React.FC<ConnectDialogProps> = observer(() => {\n  return (\n    <SwipeableDrawer\n      anchor={\"bottom\"}\n      open={getProviderStore.connectDialog}\n      onClose={() => (getProviderStore.connectDialog = false)}\n      onOpen={getProviderStore.toggleConnectDialog}\n      style={{ borderRadius: 16 }}\n    >\n      <Box\n        className={\"drawer-container\"}\n        sx={{ width: \"auto\", minHeight: 300 }}\n      >\n        <h1 className={\"tittle\"}>{t(\"connectWalletDialog\")}</h1>\n        <div className={\"description\"}>{t(\"chooseConnection\")}</div>\n        <Stack className={\"stack\"}>\n          <Paper\n            elevation={0}\n            className={\"paper\"}\n            onClick={() => getProviderStore.setProvider(PROVIDERS.WEB3)}\n          >\n            <Avatar className={\"avatar\"}>\n              <img alt={\"humaniq\"} src={HumaniqLogo} />\n            </Avatar>\n            <span>{t(\"humaniqName\")}</span>\n          </Paper>\n          <Paper\n            elevation={0}\n            className={\"paper\"}\n            onClick={() => getProviderStore.setProvider(PROVIDERS.WC)}\n          >\n            <Avatar className={\"avatar\"}>\n              <img src={WCLogo} alt={\"wallet-connect\"} />\n            </Avatar>\n            <span>{t(\"walletConnectName\")}</span>\n          </Paper>\n          <Paper\n            elevation={0}\n            className={\"paper\"}\n            onClick={() => getProviderStore.setProvider(PROVIDERS.WEB3)}\n          >\n            <Avatar className={\"avatar\"}>\n              <img alt={\"web3\"} src={Web3Logo} />\n            </Avatar>\n            <span>{t(\"web3Name\")}</span>\n          </Paper>\n        </Stack>\n        <div className={\"btn-container\"}>\n          <Button\n            onClick={getProviderStore.toggleConnectDialog}\n            className={\"btn\"}\n            variant={\"text\"}\n          >\n            {t(\"later\")}\n          </Button>\n        </div>\n      </Box>\n    </SwipeableDrawer>\n  );\n});\n","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport { Box, Button, SwipeableDrawer } from \"@mui/material\";\nimport { getProviderStore } from \"../../App\";\nimport { t } from \"i18next\";\nimport \"./styles.sass\";\n\nexport interface DisconnectDialogProps {}\n\nexport const DisconnectDialog: React.FC<DisconnectDialogProps> = observer(\n  () => {\n    return (\n      <SwipeableDrawer\n        anchor={\"bottom\"}\n        open={getProviderStore.disconnectDialog}\n        onClose={() => (getProviderStore.disconnectDialog = false)}\n        onOpen={getProviderStore.toggleDisconnectDialog}\n        style={{ borderRadius: 16 }}\n      >\n        <Box\n          className={\"drawer-container\"}\n          sx={{ width: \"auto\", minHeight: 300 }}\n        >\n          <h1 className={\"tittle\"}>{t(\"disconnectWalletDialog\")}</h1>\n          <div className={\"description medium\"}>{t(\"chooseDisconnection\")}</div>\n          <div className={\"btn-container\"}>\n            <Button\n              onClick={getProviderStore.disconnect}\n              className={\"btn\"}\n              variant={\"contained\"}\n            >\n              {t(\"disconnect\")}\n            </Button>\n            <Button\n              onClick={getProviderStore.toggleDisconnectDialog}\n              className={\"btn\"}\n              variant={\"text\"}\n            >\n              {t(\"cancel\")}\n            </Button>\n          </div>\n        </Box>\n      </SwipeableDrawer>\n    );\n  }\n);\n","import React, { useEffect, useRef } from \"react\";\nimport { observer } from \"mobx-react\";\nimport { HomeViewModel } from \"./HomeViewModel\";\nimport { UserStore, UserStore as user } from \"../../stores/userStore\";\nimport { withStore } from \"../../utils/hoc\";\nimport \"./Home.sass\";\nimport { HumaniqIdCard } from \"../../components/humaniq-id-card/HumaniqIdCard\";\nimport { getProviderStore } from \"../../App\";\nimport { Button } from \"@mui/material\";\nimport { NotRegisteredMessage } from \"../../components/not-registered-message/NotRegisteredMessage\";\nimport { HumaniqIdForm } from \"../../components/humaniq-id-form/HumaniqIdForm\";\nimport { t } from \"i18next\";\nimport { ConnectDialog } from \"../../components/dialogs/ConnectDialog\";\nimport { DisconnectDialog } from \"../../components/dialogs/DisconnectDialog\";\n\nexport interface HomeScreenInterface {\n  store: HomeViewModel;\n}\n\nconst HomeImpl = ({ store: view }: HomeScreenInterface) => {\n  const inputGalleryRef = useRef<any>();\n\n  useEffect(() => {\n    (async () => {\n      await view.init(inputGalleryRef);\n    })();\n  }, [view]);\n\n  return (\n    <div className={view.isEditMode ? \"container edit\" : \"container\"}>\n      <div className={\"main\"}>\n        {!view.isEditMode && (\n          <HumaniqIdCard\n            verified={!user.isAnyFieldEmpty}\n            address={getProviderStore.currentAccount}\n            fields={[\n              [\"Date of birth\", user.birthDate],\n              [\"Country\", user.country],\n              [\"City\", user.city],\n            ]}\n            name={user.fullName}\n            photoUrl={user.photoURI}\n            loading={!view.initialized}\n          />\n        )}\n        {view.isEditMode && (\n          <HumaniqIdForm\n            user={UserStore}\n            onBackClick={view.backClick}\n            onFileChoose={view.onFileChoose}\n            openFileExplorer={view.openFileExplorer}\n            inputRef={view.galleryRef}\n          />\n        )}\n        {!view.isEditMode && (\n          <NotRegisteredMessage\n            isRegistered={user.isRegistered}\n            isConnected={getProviderStore.currentAccount}\n          />\n        )}\n        {getProviderStore.currentAccount && (\n          <Button\n            onClick={view.toggleEditOrSave}\n            className={view.isEditMode ? \"btn\" : \"btn-2\"}\n            variant={\"contained\"}\n            disabled={view.isEditMode ? user.isAnyFieldEmpty : false}\n          >\n            {view.isEditMode ? t(\"signWithWallet\") : t(\"egitProfile\")}\n          </Button>\n        )}\n        {!view.isEditMode && (\n          <Button\n            onClick={view.toggleDialogOrDisconnectWallet}\n            className={\"btn\"}\n            variant={!getProviderStore.currentAccount ? \"contained\" : \"text\"}\n          >\n            {!getProviderStore.currentAccount\n              ? t(\"connectWalletDialog\")\n              : t(\"disconnect\")}\n          </Button>\n        )}\n        <ConnectDialog />\n        <DisconnectDialog />\n      </div>\n    </div>\n  );\n};\n\nexport const Home = withStore(HomeViewModel, observer(HomeImpl));\n","const routes = {\r\n  home: {\r\n    path: \"/\",\r\n  }\r\n};\r\n\r\nexport default routes;","import React from \"react\";\r\n\r\nconst NotFound = () => {\r\n  return <div className=\"home-card\"></div>;\r\n};\r\n\r\nexport default NotFound;\r\n","import React, { useEffect } from \"react\";\r\nimport { HashRouter as Router, Route, Routes } from \"react-router-dom\";\r\nimport { Home } from \"./screens/home/Home\";\r\nimport \"./App.sass\";\r\nimport routes from \"./utils/routes\";\r\nimport NotFound from \"./screens/404/404\";\r\nimport b from \"buffer\";\r\nimport { observer } from \"mobx-react\";\r\nimport { ETHProvider } from \"./stores/providerStore\";\r\nimport { AlertProps, Snackbar } from \"@mui/material\";\r\nimport { app } from \"./stores/appStore/appStore\";\r\nimport MuiAlert from \"@mui/material/Alert\";\r\n\r\nwindow.Buffer = b.Buffer;\r\n\r\nexport const getProviderStore = ETHProvider;\r\n\r\nconst Alert = React.forwardRef<HTMLDivElement, AlertProps>(function Alert(\r\n  props,\r\n  ref\r\n) {\r\n  return (\r\n    <MuiAlert\r\n      sx={{ borderColor: \"white\" }}\r\n      elevation={6}\r\n      ref={ref}\r\n      variant=\"outlined\"\r\n      {...props}\r\n    />\r\n  );\r\n});\r\n\r\nexport const App = observer(() => {\r\n  useEffect(() => {\r\n    (async () => {\r\n      await getProviderStore.init();\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {getProviderStore.initialized ? (\r\n        <Router>\r\n          <Routes>\r\n            <Route path={routes.home.path} element={<Home />} />\r\n            <Route path=\"*\" element={<NotFound />} />\r\n          </Routes>\r\n        </Router>\r\n      ) : null}\r\n      <Snackbar\r\n        open={app.alert.displayAlert}\r\n        autoHideDuration={6000}\r\n        onClose={app.alert.alertClose}\r\n        style={{ backgroundColor: \"white\" }}\r\n      >\r\n        <Alert\r\n          onClose={app.alert.alertClose}\r\n          severity=\"success\"\r\n          sx={{ width: \"100%\" }}\r\n        >\r\n          {app.alert.alertMessage}\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.sass\";\r\nimport \"./translations/i18n\";\r\nimport { App } from \"./App\";\r\nimport { configure } from \"mobx\";\r\n\r\nconfigure({\r\n  enforceActions: \"never\",\r\n});\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n","class Logcat {\n  static log(...args: any[]) {\n    console.log(...args);\n  }\n\n  static debug(...args: any[]) {\n    console.debug(...args);\n  }\n\n  static error(msg: any, err: any, ...optionalParams: any[]) {\n    console.error(msg, err, optionalParams);\n  }\n\n  static info(...args: any[]) {\n    console.info(...args);\n  }\n\n  static warning(msg: any, ...optionalParams: any[]) {\n    console.warn(msg, optionalParams);\n  }\n}\n\nexport default Logcat;\n","export const API_HUMANIQ_URL = \"https://signupbot.humaniq.com/api/v1\";\nexport const API_HUMANIQ_TOKEN = \"XMaLhU75ZFklvAiV7yBZBNnlWsE9IowU\";\n\nexport const HUMANIQ_ROUTES = {\n  INTROSPECT: {\n    POST_SIGNUP_CHECK: \"/introspect/signup/check\",\n    POST_SIGNUP_CONFIRM: \"/introspect/signup/confirm\",\n    GET_SIGNUP_OBJECT: \"/introspect/signup/object/:uid\",\n    GET_SIGNUP_PHOTO: \"/introspect/signup/photo/:uid\",\n    GET_SIGNUP_WALLET: \"/introspect/signup/wallet/:wallet\",\n  },\n  DAPP: {\n    POST_PROFILE_UPDATE: \"/dapp/profile/update\",\n    POST_PROFILE_PHOTO_UPDATE: \"/photo/upload\",\n  },\n  PHOTO: {\n    POST_PHOTO: \"/photo/upload\",\n  },\n};\n\nexport const rpc = {\n  1: \"https://mainnet.infura.io/v3/c306191fe58d401b900a38911b8a43c9\",\n  3: \"https://ropsten.infura.io/v3/c306191fe58d401b900a38911b8a43c9\",\n  4: \"https://rinkeby.infura.io/v3/c306191fe58d401b900a38911b8a43c9\",\n  5: \"https://goerli.infura.io/v3/c306191fe58d401b900a38911b8a43c9\",\n  97: \"https://data-seed-prebsc-1-s1.binance.org:8545\",\n  56: \"https://bsc-dataseed.binance.org\",\n};\n","import { makeAutoObservable } from \"mobx\";\nimport Logcat from \"../utils/logcat\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport { rpc } from \"../constants/api\";\nimport { getProviderStore } from \"../App\";\n\nexport enum PROVIDERS {\n  WEB3 = \"WEB3\",\n  WC = \"WC\",\n}\n\nexport class ProviderStore {\n  initialized = false;\n  currentAccount: any = null;\n  hasProvider = false;\n  currentProvider: any;\n  chainId: number;\n  connectDialog = false;\n  disconnectDialog = false;\n  connectedProvider: PROVIDERS;\n\n  constructor() {\n    makeAutoObservable(this, undefined, { autoBind: true });\n  }\n\n  setProvider = async (type: PROVIDERS) => {\n    try {\n      switch (type) {\n        case PROVIDERS.WC:\n          const provider = new WalletConnectProvider({ rpc });\n          const result = await provider.enable();\n          this.currentAccount = result[0];\n          this.currentProvider = provider;\n          await this.initProvider();\n          break;\n        case PROVIDERS.WEB3:\n        default:\n          this.currentProvider = window.ethereum;\n          await this.initProvider();\n          await this.connectToWeb3();\n      }\n      this.connectedProvider = type;\n      localStorage.setItem(\"connected\", type);\n      this.connectDialog = false;\n    } catch (e) {\n      Logcat.error(\"ERROR\", e);\n    }\n  };\n\n  initProvider = async () => {\n    if (!this.currentProvider) return;\n    this.currentProvider.on(\"accountsChanged\", (accounts: any) => {\n      this.currentAccount = accounts[0];\n    });\n\n    this.currentProvider.on(\"disconnect\", () => {\n      Logcat.info(\"disconnect\");\n      this.currentAccount = null;\n    });\n\n    this.currentProvider.on(\"connect\", (accounts: any) => {\n      this.currentAccount = accounts[0];\n    });\n\n    this.currentProvider.on(\"chainChanged\", (chainId: number) => {\n      Logcat.log({ chainId });\n      this.chainId = chainId;\n    });\n\n    this.currentProvider.on(\"message\", (payload: any) => {\n      Logcat.info(\"message\", payload);\n    });\n  };\n\n  init = async () => {\n    this.initialized = true;\n    const provider = localStorage.getItem(\"connected\");\n    if (provider) {\n      await this.setProvider(provider as PROVIDERS);\n    }\n  };\n\n  connectToWeb3 = async () => {\n    try {\n      const accounts = await this.currentProvider.request({\n        method: \"eth_requestAccounts\",\n      });\n      this.currentAccount = accounts[0];\n    } catch (e) {\n      Logcat.info(\"ERROR\", e);\n    }\n  };\n\n  personalMessageRequest = (message: any): any => {\n    if (!this.currentProvider) return null;\n\n    return this.currentProvider.request({\n      method: \"personal_sign\",\n      params: [\n        `0x${Buffer.from(message, \"utf-8\").toString(\"hex\")}`,\n        this.currentAccount,\n      ],\n    });\n  };\n\n  connect = async () => {\n    if (!this.currentProvider || this.currentProvider?.currentAccount) return;\n    try {\n      const accounts = await this.currentProvider.request({\n        method: \"eth_requestAccounts\",\n      });\n      this.currentAccount = accounts[0];\n    } catch (e) {\n      Logcat.info(\"ERROR\", e);\n    }\n  };\n  disconnect = () => {\n    this.currentAccount = null;\n    this.disconnectDialog = false;\n    try {\n      localStorage.removeItem(\"connected\");\n      localStorage.removeItem(\"walletconnect\");\n    } catch (e) {\n      Logcat.error(\"ERROR\", e);\n    }\n  };\n  toggleConnectDialog = () => {\n    this.connectDialog = !this.connectDialog;\n  };\n  toggleDisconnectDialog = () => {\n    this.disconnectDialog = !this.disconnectDialog;\n  };\n}\n\nexport const ETHProvider = new ProviderStore();\n"],"sourceRoot":""}