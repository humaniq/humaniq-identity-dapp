{"version":3,"sources":["stores/provider/providerStore.ts","translations/i18n.ts","utils/colors.ts","utils/address.ts","components/header/header.tsx","components/footer/footer.tsx","constants/general.ts","components/input/FormInput.tsx","utils/textUtils.ts","constants/api.ts","utils/network.ts","services/apiService/apiService.ts","utils/hoc.tsx","stores/user/userStore.ts","screens/home/HomeViewModel.ts","components/date-picker/date-picker.tsx","screens/home/Home.tsx","utils/routes.ts","screens/404/404.tsx","components/app/WalletNotConnected.tsx","components/app/ProviderNotInjected.tsx","App.tsx","index.tsx","utils/logcat.ts"],"names":["ETHProvider","initialized","currentAccount","hasProvider","init","a","window","ethereum","on","accounts","payload","Logcat","info","request","method","personalMessageRequest","message","params","Buffer","from","toString","connect","disconnect","makeAutoObservable","this","undefined","autoBind","i18n","use","LanguageDetector","initReactI18next","resources","en","translation","changeLanguage","colors","primary","error","success","warning","blueOcean","textGrey","bg","white","grey","greyLight","renderShortAddress","address","checksummedAddress","toChecksumAddress","slice","substring","length","Header","t","useTranslation","style","padding","textAlign","backgroundColor","color","justifyContent","display","alignItems","fontSize","lineHeight","getProviderStore","overlay","Item","onClick","placement","type","disabled","Footer","dayjs","year","DATE_FORMAT","errorStyle","borderWidth","borderColor","FormInput","title","input","onChange","direction","align","Text","size","event","target","value","isEmpty","str","trim","API_HUMANIQ_URL","HUMANIQ_ROUTES","POST_SIGNUP_CHECK","POST_SIGNUP_CONFIRM","GET_SIGNUP_OBJECT","GET_SIGNUP_PHOTO","GET_SIGNUP_WALLET","POST_PROFILE_UPDATE","formatRoute","routePath","reSplatParams","reSlashTokens","tokens","paramName","hasOwnProperty","paramValue","val","Object","prototype","call","i","replace","match","tokenName","encodeURIComponent","paramRegex","RegExp","g1","g2","paramRegexRR4","token","Store","Component","ApiService","axios","baseURL","headers","create","interceptors","response","isOk","Promise","resolve","get","path","config","post","body","UserStore","firstName","lastName","country","city","birthDate","firstNameError","lastNameError","countryError","cityError","birthDateError","photoURI","isFetching","api","setFirstName","setLastName","setCountry","setCity","setBirthDate","fetchProfile","wallet","result","setProfileUser","data","isAnyFieldEmpty","action","timeStamp","Date","getTime","query","addressFrom","typeOperation","typeMessage","signature","test","HomeViewModel","galleryRef","ref","user","reaction","onReset","openFileExplorer","current","click","onFileChoose","preventDefault","file","files","log","DatePicker","generatePicker","dayjsGenerateConfig","Home","observer","view","store","inputGalleryRef","useRef","useEffect","flex","minWidth","Title","level","margin","src","dateString","defaultValue","getBirthDate","format","onSubmit","marginTop","width","props","useMemo","routes","home","NotFound","className","WalletNotConnected","marginBottom","marginRight","marginLeft","height","ProviderNotInjected","b","App","element","configure","enforceActions","ReactDOM","render","document","getElementById","msg","console","debug","err","warn"],"mappings":"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","file":"static/js/main.1a5e1bb4.chunk.js","sourcesContent":["import { makeAutoObservable } from \"mobx\";\nimport Logcat from \"../../utils/logcat\";\n\nexport class ProviderStore {\n  initialized = false;\n  currentAccount: any = null;\n  hasProvider = false;\n\n  constructor() {\n    makeAutoObservable(this, undefined, { autoBind: true });\n  }\n\n  init = async () => {\n    if (window.ethereum) {\n      this.hasProvider = true;\n\n      window.ethereum.on(\"accountsChanged\", (accounts: any) => {\n        this.currentAccount = accounts[0];\n      });\n\n      window.ethereum.on(\"disconnect\", () => {\n        this.currentAccount = null;\n      });\n\n      window.ethereum.on(\"connect\", (accounts: any) => {\n        this.currentAccount = accounts[0];\n      });\n\n      window.ethereum.on(\"message\", (payload: any) => {\n        Logcat.info(\"message\", payload);\n      });\n\n      try {\n        const accounts = await window.ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        this.currentAccount = accounts[0];\n      } catch (e) {\n        Logcat.info(\"ERROR\", e);\n      }\n    }\n    this.initialized = true;\n  };\n\n  personalMessageRequest = (message: any): any => {\n    if (!window.ethereum) return null;\n\n    return window.ethereum.request({\n      method: \"personal_sign\",\n      params: [\n        `0x${Buffer.from(message, \"utf-8\").toString(\"hex\")}`,\n        this.currentAccount,\n      ],\n    });\n  };\n\n  connect = async () => {\n    if (!window.ethereum || window.ethereum?.currentAccount) return;\n\n    try {\n      const accounts = await window.ethereum.request({\n        method: \"eth_requestAccounts\",\n      });\n      this.currentAccount = accounts[0];\n    } catch (e) {\n      Logcat.info(\"ERROR\", e);\n    }\n  };\n  disconnect = () => {\n    this.currentAccount = null;\n  };\n}\n\nexport const ETHProvider = new ProviderStore();\n","import i18n from \"i18next\";\r\nimport { initReactI18next } from \"react-i18next\";\r\nimport LanguageDetector from \"i18next-browser-languagedetector\";\r\n\r\nimport en from \"./en/en.json\";\r\n\r\ni18n\r\n  .use(LanguageDetector)\r\n  .use(initReactI18next)\r\n  .init({\r\n    resources: {\r\n      en: {\r\n        translation: en,\r\n      },\r\n    },\r\n  });\r\n\r\ni18n.changeLanguage(\"en\");\r\n","const colors = {\r\n  primary: \"#0066DA\",\r\n  error: \"#F44336\",\r\n  success: \"#4CAF50\",\r\n  warning: \"#FD9900\",\r\n  blueOcean: \"#001833\",\r\n  textGrey: \"#9B9B9B\",\r\n  bg: \"#F5FAFF\",\r\n  white: \"#FFFFFF\",\r\n  grey: \"#E0E0E0\",\r\n  greyLight: \"#F2F3F6\",\r\n}\r\n\r\nexport default colors","import { toChecksumAddress } from \"ethereumjs-util\";\n\n/**\n * Returns short address format\n *\n * @param {String} address - String corresponding to an address\n * @param {Number} chars - Number of characters to show at the end and beginning.\n * Defaults to 4.\n * @returns {String} - String corresponding to short address format\n */\nexport function renderShortAddress(address: string, chars = 4) {\n  if (!address) return address;\n  const checksummedAddress = toChecksumAddress(address);\n  // return `${checksummedAddress.substr(0, chars + 2)}...${checksummedAddress.substr(-chars)}`;\n  return checksummedAddress\n    ? `${checksummedAddress.slice(0, 4)}...${checksummedAddress.substring(\n        checksummedAddress.length - 4\n      )}`\n    : \"\";\n}\n","import React from \"react\";\nimport { Button, Dropdown, Layout, Menu } from \"antd\";\nimport { useTranslation } from \"react-i18next\";\nimport colors from \"../../utils/colors\";\nimport { getProviderStore } from \"../../App\";\nimport { renderShortAddress } from \"../../utils/address\";\n\nconst Header = () => {\n  const { t } = useTranslation();\n\n  return (\n    <Layout.Header\n      style={{\n        padding: \"0 25px\",\n        textAlign: \"center\",\n        backgroundColor: colors.primary,\n        color: colors.white,\n        justifyContent: \"space-between\",\n        display: \"flex\",\n        alignItems: \"center\",\n      }}\n    >\n      <span\n        style={{\n          fontSize: 22,\n          lineHeight: 24\n        }}\n      >\n        {t(\"appName\")}\n      </span>\n      {getProviderStore.currentAccount ? (\n        <Dropdown\n          overlay={\n            <Menu>\n              <Menu.Item key={\"logout\"}>\n                <div onClick={getProviderStore.disconnect}>logout</div>\n              </Menu.Item>\n            </Menu>\n          }\n          placement=\"bottomLeft\"\n        >\n          <Button\n            type={\"primary\"}\n            disabled={!getProviderStore.hasProvider}\n            onClick={async () => {\n              if (!getProviderStore.currentAccount) {\n                await getProviderStore.connect();\n              }\n            }}\n          >\n            {renderShortAddress(getProviderStore.currentAccount) ||\n              \"not connected\"}\n          </Button>\n        </Dropdown>\n      ) : (\n        <Button\n          type={\"primary\"}\n          disabled={!getProviderStore.hasProvider}\n          onClick={async () => {\n            if (!getProviderStore.currentAccount) {\n              await getProviderStore.connect();\n            }\n          }}\n        >\n          {renderShortAddress(getProviderStore.currentAccount) ||\n            \"not connected\"}\n        </Button>\n      )}\n    </Layout.Header>\n  );\n};\n\nexport default Header;\n","import dayjs from \"dayjs\";\r\nimport React from \"react\";\r\nimport { Layout } from \"antd\";\r\nimport colors from \"../../utils/colors\"\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <Layout.Footer style={ {\r\n      textAlign: \"center\",\r\n      backgroundColor: colors.bg\r\n    } }>\r\n      <span>\r\n        Humaniq dApps React Boilerplate © {dayjs().year()}\r\n      </span>\r\n    </Layout.Footer>\r\n  );\r\n};\r\n\r\nexport default Footer;","export const DATE_FORMAT = \"DD.MM.YYYY\";\n","import { Input, Space, Typography } from \"antd\"\r\nimport React from \"react\"\r\nimport colors from \"../../utils/colors\"\r\n\r\nexport interface FormInputInterface {\r\n  title: string\r\n  input: string\r\n  onChange: (value: string) => void\r\n  error?: string\r\n}\r\n\r\nconst errorStyle = {\r\n  borderWidth: 1,\r\n  borderColor: colors.error\r\n}\r\n\r\nexport const FormInput = ({ title, input, onChange, error }: FormInputInterface) => {\r\n  return (\r\n    <Space direction={ \"vertical\" } align={ \"baseline\" }>\r\n      <Typography.Text>{ title }</Typography.Text>\r\n      <Input size={ \"large\" }\r\n             onChange={ event => onChange(event.target.value) }\r\n             value={ input } style={ error ? errorStyle : {} }/>\r\n      { error && <Typography.Text style={ { color: colors.error } }>{ error }</Typography.Text> }\r\n    </Space>\r\n  )\r\n}","export const capitalize = (str?: string) => (str && str.charAt(0).toUpperCase() + str.slice(1)) || false\r\n\r\nexport const toUpperCase = (str?: string) => typeof str === 'string' ? str.toUpperCase() : ''\r\n\r\nexport const toLowerCase = (str?: string) => typeof str === 'string' ? str.toLowerCase() : ''\r\n\r\nexport const isEmpty = (str?: string) => typeof str === 'string' ? str.trim() === '' : true","export const API_HUMANIQ_URL = \"https://signupbot.humaniq.com/api/v1\";\nexport const API_HUMANIQ_TOKEN = \"XMaLhU75ZFklvAiV7yBZBNnlWsE9IowU\";\n\nexport const HUMANIQ_ROUTES = {\n  INTROSPECT: {\n    POST_SIGNUP_CHECK: \"/introspect/signup/check\",\n    POST_SIGNUP_CONFIRM: \"/introspect/signup/confirm\",\n    GET_SIGNUP_OBJECT: \"/introspect/signup/object/:uid\",\n    GET_SIGNUP_PHOTO: \"/introspect/signup/photo/:uid\",\n    GET_SIGNUP_WALLET: \"/introspect/signup/wallet/:wallet\",\n  },\n  DAPP: {\n    POST_PROFILE_UPDATE: \"/dapp/profile/update\",\n  },\n};\n","export const isNotAuthorized = (code: number) => code === 401;\nexport const isNotAllowed = (code: number) => code === 403;\nexport const isOk = (code: number) => code >= 200 && code <= 202;\n\nfunction toArray(val: string) {\n  return Object.prototype.toString.call(val) !== \"[object Array]\" ? [val] : val;\n}\n\nexport function formatRoute(routePath: string, params: any) {\n  const reRepeatingSlashes = /\\/+/g; // \"/some//path\"\n  const reSplatParams = /\\*{1,2}/g; // \"/some/*/complex/**/path\"\n  const reResolvedOptionalParams = /\\(([^:*?#]+?)\\)/g; // \"/path/with/(resolved/params)\"\n  const reUnresolvedOptionalParams = /\\([^:?#]*:[^?#]*?\\)/g; // \"/path/with/(groups/containing/:unresolved/optional/:params)\"\n  const reUnresolvedOptionalParamsRR4 = /(\\/[^/]*\\?)/g; // \"/path/with/groups/containing/unresolved?/optional/params?\"\n  const reTokens = /<(.*?)>/g;\n  const reSlashTokens = /_!slash!_/g;\n\n  let tokens: any = {};\n\n  if (params) {\n    for (let paramName in params) {\n      if (params.hasOwnProperty(paramName)) {\n        let paramValue = params[paramName];\n\n        if (paramName === \"splat\") {\n          // special param name in RR, used for \"*\" and \"**\" placeholders\n          paramValue = toArray(paramValue); // when there are multiple globs, RR defines \"splat\" param as array.\n          let i = 0;\n          routePath = routePath.replace(reSplatParams, (match) => {\n            let val = paramValue[i++];\n            if (val == null) {\n              return \"\";\n            } else {\n              let tokenName = `splat${i}`;\n              tokens[tokenName] =\n                match === \"*\"\n                  ? encodeURIComponent(val)\n                  : // don't escape slashes for double star, as \"**\" considered greedy by RR spec\n                    encodeURIComponent(\n                      val.toString().replace(/\\//g, \"_!slash!_\")\n                    ).replace(reSlashTokens, \"/\");\n              return `<${tokenName}>`;\n            }\n          });\n        } else {\n          // Rougly resolve all named placeholders.\n          // Cases:\n          // - \"/path/:param\"\n          // - \"/path/(:param)\"\n          // - \"/path(/:param)\"\n          // - \"/path(/:param/):another_param\"\n          // - \"/path/:param(/:another_param)\"\n          // - \"/path(/:param/:another_param)\"\n          const paramRegex = new RegExp(\n            \"(/|\\\\(|\\\\)|^):\" + paramName + \"(/|\\\\)|\\\\(|$)\"\n          );\n          routePath = routePath.replace(paramRegex, (match, g1, g2) => {\n            tokens[paramName] = encodeURIComponent(paramValue);\n            return `${g1}<${paramName}>${g2}`;\n          });\n          const paramRegexRR4 = new RegExp(\"(.*):\" + paramName + \"\\\\?(.*)\");\n          routePath = routePath.replace(paramRegexRR4, (match, g1, g2) => {\n            tokens[paramName] = encodeURIComponent(paramValue);\n            return `${g1}<${paramName}>${g2}`;\n          });\n        }\n      }\n    }\n  }\n\n  return (\n    routePath\n      // Remove braces around resolved optional params (i.e. \"/path/(value)\")\n      .replace(reResolvedOptionalParams, \"$1\")\n      // Remove all sequences containing at least one unresolved optional param\n      .replace(reUnresolvedOptionalParams, \"\")\n      // Remove all sequences containing at least one unresolved optional param in RR4\n      .replace(reUnresolvedOptionalParamsRR4, \"\")\n      // After everything related to RR syntax is removed, insert actual values\n      .replace(reTokens, (match, token) => tokens[token])\n      // Remove repeating slashes\n      .replace(reRepeatingSlashes, \"/\")\n      // Always remove ending slash for consistency\n      .replace(/\\/+$/, \"\")\n      // If there was a single slash only, keep it\n      .replace(/^$/, \"/\")\n  );\n}\n","import axios, { AxiosInstance, AxiosRequestConfig, AxiosResponse } from \"axios\";\nimport { API_HUMANIQ_URL } from \"../../constants/api\";\nimport { formatRoute } from \"../../utils/network\";\n\nexport interface ApiServiceResponse<T> extends AxiosResponse<T> {\n  isOk: boolean;\n}\n\nexport class ApiService {\n  axios: AxiosInstance;\n  init = (baseURL: string = API_HUMANIQ_URL, headers = {}) => {\n    this.axios = axios.create({ baseURL, headers });\n\n    this.axios.interceptors.response.use(\n      function (response) {\n        return { ...response, isOk: true };\n      },\n      function (error) {\n        return Promise.resolve({ ...error, isOk: false }); // Promise.reject(error);\n      }\n    );\n  };\n  get = async (path: string, params?: any, config?: AxiosRequestConfig) =>\n    this.axios.get(formatRoute(path, params), config) as Promise<\n      ApiServiceResponse<any>\n    >;\n  post = async (\n    path: string,\n    body?: any,\n    params?: any,\n    config?: AxiosRequestConfig\n  ) =>\n    this.axios.post(\n      params ? formatRoute(path, params) : path,\n      body,\n      config\n    ) as Promise<ApiServiceResponse<any>>;\n}\n","import React, { useMemo } from \"react\";\n\nexport const withStore =\n  (Store: any, Component: any) =>\n  ({ ...props }) => {\n    const store = useMemo(() => {\n      return new Store();\n    }, []);\n\n    return <Component store={store} {...props} />;\n  };\n","import { action, makeAutoObservable } from \"mobx\";\nimport { getProviderStore } from \"../../App\";\nimport { isEmpty } from \"../../utils/textUtils\";\nimport Logcat from \"../../utils/logcat\";\nimport { t } from \"i18next\";\nimport dayjs from \"dayjs\";\nimport { ApiService } from \"../../services/apiService/apiService\";\nimport {\n  API_HUMANIQ_TOKEN,\n  API_HUMANIQ_URL,\n  HUMANIQ_ROUTES,\n} from \"../../constants/api\";\nimport { UserProfileResponse } from \"../../services/apiService/responses\";\nimport { DATE_FORMAT } from \"../../constants/general\";\nimport { message } from \"antd\";\n\nclass User {\n  firstName = \"\";\n  lastName = \"\";\n  country = \"\";\n  city = \"\";\n  birthDate = \"\";\n\n  firstNameError?: string;\n  lastNameError?: string;\n  countryError?: string;\n  cityError?: string;\n  birthDateError?: string;\n\n  photoURI = \"\";\n  isFetching = false;\n\n  api: ApiService;\n\n  constructor() {\n    makeAutoObservable(this);\n    this.api = new ApiService();\n    this.api.init(API_HUMANIQ_URL, { \"x-auth-token\": API_HUMANIQ_TOKEN });\n  }\n\n  get getBirthDate() {\n    return !isEmpty(this.birthDate)\n      ? dayjs(this.birthDate, DATE_FORMAT)\n      : dayjs();\n  }\n\n  get buttonDisabled() {\n    return this.isAnyFieldEmpty();\n  }\n\n  setFirstName = (value: string) => {\n    this.firstNameError = undefined;\n    this.firstName = value;\n  };\n\n  setLastName = (value: string) => {\n    this.lastNameError = undefined;\n    this.lastName = value;\n  };\n\n  setCountry = (value: string) => {\n    this.countryError = undefined;\n    this.country = value;\n  };\n\n  setCity = (value: string) => {\n    this.cityError = undefined;\n    this.city = value;\n  };\n\n  setBirthDate = (value: string) => {\n    this.birthDateError = undefined;\n    this.birthDate = value;\n  };\n\n  fetchProfile = async () => {\n    // some profile fetching\n    this.isFetching = true;\n    const result = await this.api.get(\n      HUMANIQ_ROUTES.INTROSPECT.GET_SIGNUP_WALLET,\n      { wallet: getProviderStore.currentAccount }\n    );\n    if (result.isOk) {\n      this.setProfileUser(result.data);\n    } else {\n      Logcat.info(\"ERROR\", result);\n    }\n    this.isFetching = false;\n  };\n\n  @action\n  onSubmit = async () => {\n    if (isEmpty(this.firstName)) {\n      this.firstNameError = t(\"emptyField\");\n    }\n\n    if (isEmpty(this.lastName)) {\n      this.lastNameError = t(\"emptyField\");\n    }\n\n    if (isEmpty(this.country)) {\n      this.countryError = t(\"emptyField\");\n    }\n\n    if (isEmpty(this.city)) {\n      this.cityError = t(\"emptyField\");\n    }\n\n    if (isEmpty(this.birthDate)) {\n      this.birthDateError = t(\"emptyField\");\n    }\n\n    if (this.isAnyFieldEmpty()) {\n      return;\n    }\n\n    const timeStamp = new Date().getTime();\n    const request = `ADDRESS ${getProviderStore.currentAccount} UPDATE PERSONAL INFO TIMESTAMP ${timeStamp}`;\n    try {\n      const result = await getProviderStore.personalMessageRequest(request);\n      if (result) {\n        const body = {\n          query: {\n            addressFrom: getProviderStore.currentAccount,\n            timeStamp,\n            typeOperation: \"UPSERT\",\n            typeMessage: \"humaniqIdentity\",\n            payload: {\n              lastName: this.lastName,\n              firstName: this.firstName,\n              birthDate: this.birthDate,\n              city: this.city,\n              country: this.country,\n            },\n          },\n          signature: result,\n        };\n        const response = await this.api.post(\n          HUMANIQ_ROUTES.DAPP.POST_PROFILE_UPDATE,\n          body\n        );\n        if (response.isOk) {\n          message.success(t(\"userProfile.successUpdate\"));\n        } else {\n          message.error(t(\"userProfile.errorUpdate\"));\n          Logcat.info(\"ERROR\", response);\n        }\n      }\n    } catch (e) {\n      message.error(t(\"userProfile.errorSign\"));\n      Logcat.info(e);\n    }\n  };\n\n  @action\n  setProfileUser = (test: UserProfileResponse) => {\n    this.firstName = test.firstName;\n    this.lastName = test.lastName;\n    this.country = test.country;\n    this.city = test.city;\n    this.birthDate = test.birthDate;\n    this.photoURI = test.photoURI;\n  };\n\n  @action\n  onReset = () => {\n    this.firstName = \"\";\n    this.lastName = \"\";\n    this.country = \"\";\n    this.city = \"\";\n    this.birthDate = \"\";\n    this.photoURI = \"\";\n  };\n\n  isAnyFieldEmpty = () =>\n    isEmpty(this.firstName) ||\n    isEmpty(this.lastName) ||\n    isEmpty(this.country) ||\n    isEmpty(this.city) ||\n    isEmpty(this.birthDate);\n}\n\nexport const UserStore = new User();\n","import { RefObject } from \"react\";\nimport { makeAutoObservable, reaction } from \"mobx\";\nimport Logcat from \"../../utils/logcat\";\nimport { UserStore, UserStore as user } from \"../../stores/user/userStore\";\nimport { ETHProvider } from \"../../stores/provider/providerStore\";\n\nexport class HomeViewModel {\n  private galleryRef?: RefObject<HTMLInputElement>;\n\n  constructor() {\n    makeAutoObservable(this, {}, { autoBind: true });\n  }\n\n  init = async (ref?: RefObject<HTMLInputElement>) => {\n    this.galleryRef = ref;\n    await user.fetchProfile();\n    reaction(\n      () => ETHProvider.currentAccount,\n      async (val) => {\n        if (val) {\n          await user.fetchProfile();\n        } else {\n          UserStore.onReset();\n        }\n      }\n    );\n  };\n\n  openFileExplorer = () => {\n    this.galleryRef?.current?.click();\n  };\n\n  onFileChoose = (event: any) => {\n    event.preventDefault();\n    let file = event.target.files[0];\n    Logcat.log(\"file...\", file);\n    // let form = new FormData();\n    // form.append('file', this.state.file);\n  };\n}\n","import { Dayjs } from \"dayjs\";\nimport dayjsGenerateConfig from \"rc-picker/lib/generate/dayjs\";\nimport generatePicker from \"antd/es/date-picker/generatePicker\";\nimport \"antd/es/date-picker/style/index\";\n\nconst DatePicker = generatePicker<Dayjs>(dayjsGenerateConfig);\n\nexport default DatePicker;\n","import React, { useEffect, useRef } from \"react\";\nimport { observer } from \"mobx-react\";\nimport { Avatar, Button, Card, Space, Spin, Typography } from \"antd\";\nimport { useTranslation } from \"react-i18next\";\nimport { DATE_FORMAT } from \"../../constants/general\";\nimport { FormInput } from \"../../components/input/FormInput\";\nimport colors from \"../../utils/colors\";\nimport { HomeViewModel } from \"./HomeViewModel\";\nimport { UserStore as user } from \"../../stores/user/userStore\";\nimport DatePicker from \"../../components/date-picker/date-picker\";\nimport { Content } from \"antd/es/layout/layout\";\nimport { withStore } from \"../../utils/hoc\";\n\nexport interface HomeScreenInterface {\n  store: HomeViewModel;\n}\n\nconst HomeImpl = ({ store: view }: HomeScreenInterface) => {\n  const { t } = useTranslation();\n  const inputGalleryRef = useRef<any>();\n\n  useEffect(() => {\n    (async () => {\n      await view.init(inputGalleryRef);\n    })();\n  }, [view]);\n\n  if (user.isFetching) {\n    return (\n      <Card\n        style={{\n          display: \"flex\",\n          flex: 1,\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          minWidth: 300,\n          borderWidth: 0,\n        }}\n      >\n        <Space direction={\"horizontal\"}>\n          <Spin />\n          <Typography.Title level={3}>{t(\"loading\")}</Typography.Title>\n        </Space>\n      </Card>\n    );\n  }\n\n  return (\n    <Content>\n      <div\n        style={{\n          textAlign: \"center\",\n          margin: 24,\n          borderWidth: 0,\n        }}\n      >\n        <Space direction=\"vertical\">\n          <Typography.Title level={1}>{t(\"yourProfile\")}</Typography.Title>\n\n          <Avatar size={100} src={user.photoURI} />\n\n          {/*<input*/}\n          {/*  onChange={ view.onFileChoose }*/}\n          {/*  accept=\"image/*\"*/}\n          {/*  type=\"file\"*/}\n          {/*  id=\"file\"*/}\n          {/*  ref={ inputGalleryRef }*/}\n          {/*  style={ { display: \"none\" } }*/}\n          {/*/>*/}\n          {/*<Button*/}\n          {/*  onClick={ view.openFileExplorer }*/}\n          {/*  size={ \"small\" }*/}\n          {/*  style={ { marginBottom: 20 } }*/}\n          {/*>*/}\n          {/*  { t(\"changeAvatar\") }*/}\n          {/*</Button>*/}\n\n          <FormInput\n            title={t(\"firstName\")}\n            input={user.firstName}\n            onChange={user.setFirstName}\n            error={user.firstNameError}\n          />\n\n          <FormInput\n            title={t(\"lastName\")}\n            input={user.lastName}\n            onChange={user.setLastName}\n            error={user.lastNameError}\n          />\n\n          <FormInput\n            title={t(\"country\")}\n            input={user.country}\n            onChange={user.setCountry}\n            error={user.countryError}\n          />\n\n          <FormInput\n            title={t(\"city\")}\n            input={user.city}\n            onChange={user.setCity}\n            error={user.cityError}\n          />\n\n          <Space direction=\"vertical\" size={12}>\n            <Typography.Text>{t(\"birthDate\")}</Typography.Text>\n            <DatePicker\n              onChange={(value: any, dateString: string) => {\n                user.setBirthDate(dateString);\n              }}\n              style={\n                user.birthDateError\n                  ? { borderWidth: 1, borderColor: colors.error }\n                  : {}\n              }\n              defaultValue={user.getBirthDate}\n              format={DATE_FORMAT}\n            />\n          </Space>\n\n          <Button\n            onClick={user.onSubmit}\n            size={\"large\"}\n            style={{ marginTop: 30, width: \"100%\" }}\n            type=\"primary\"\n          >\n            {t(\"update\")}\n          </Button>\n        </Space>\n      </div>\n    </Content>\n  );\n};\n\nexport const Home = withStore(HomeViewModel, observer(HomeImpl));\n","const routes = {\r\n  home: {\r\n    path: \"/\",\r\n  }\r\n};\r\n\r\nexport default routes;","import React from \"react\";\r\n\r\nconst NotFound = () => {\r\n  return <div className=\"home-card\"></div>;\r\n};\r\n\r\nexport default NotFound;\r\n","import { Button, Layout, Typography } from \"antd\"\r\nimport React from \"react\"\r\nimport { useTranslation } from \"react-i18next\"\r\n\r\nexport interface WalletNotConnectedProps {\r\n  onClick: () => {}\r\n}\r\n\r\nexport const WalletNotConnected = ({ onClick }: WalletNotConnectedProps) => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <Layout style={ {\r\n      textAlign: \"center\",\r\n      display: \"flex\",\r\n      flex: 1,\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n      minWidth: 300,\r\n      marginBottom: 24,\r\n      borderWidth: 0,\r\n      marginRight: 30,\r\n      marginLeft: 30\r\n    } }>\r\n      <Typography.Title level={ 3 }>{ t(\"walletNotConnected\") }</Typography.Title>\r\n      <Button onClick={ onClick } size={ \"large\" }\r\n              style={ { marginTop: 30, width: '100%', height: 60 } }\r\n              type=\"primary\">\r\n        { t(\"connectWallet\") }\r\n      </Button>\r\n    </Layout>\r\n  )\r\n}","import { Layout, Typography } from \"antd\"\r\nimport React from \"react\"\r\nimport { useTranslation } from \"react-i18next\"\r\n\r\nexport const ProviderNotInjected = () => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <Layout style={ {\r\n      display: \"flex\",\r\n      flex: 1,\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n      minWidth: 300,\r\n      marginBottom: 24,\r\n      borderWidth: 0\r\n    } }>\r\n      <Typography.Title level={ 3 }>{ t(\"notAllowed\") }</Typography.Title>\r\n    </Layout>\r\n  )\r\n}","import React, { useEffect } from \"react\";\nimport Header from \"./components/header/header\";\nimport Footer from \"./components/footer/footer\";\nimport { HashRouter as Router, Route, Routes } from \"react-router-dom\";\nimport { Home } from \"./screens/home/Home\";\nimport \"antd/dist/antd.css\";\nimport \"./App.scss\";\nimport routes from \"./utils/routes\";\nimport NotFound from \"./screens/404/404\";\nimport b from \"buffer\";\nimport { observer } from \"mobx-react\";\nimport { Layout } from \"antd\";\nimport { WalletNotConnected } from \"./components/app/WalletNotConnected\";\nimport { ProviderNotInjected } from \"./components/app/ProviderNotInjected\";\nimport { ETHProvider } from \"./stores/provider/providerStore\";\n\nwindow.Buffer = b.Buffer;\n\nexport const getProviderStore = ETHProvider;\n\nexport const App = observer(() => {\n  useEffect(() => {\n    (async () => {\n      await getProviderStore.init();\n    })();\n  }, []);\n\n  return (\n    <Layout className=\"App\">\n      <Header />\n      {getProviderStore.initialized ? (\n        <>\n          {getProviderStore.hasProvider ? (\n            <>\n              {getProviderStore.currentAccount ? (\n                <Router>\n                  <Routes>\n                    <Route path={routes.home.path} element={<Home />} />\n                    <Route path=\"*\" element={<NotFound />} />\n                  </Routes>\n                </Router>\n              ) : (\n                <WalletNotConnected onClick={getProviderStore.connect} />\n              )}\n            </>\n          ) : (\n            <ProviderNotInjected />\n          )}\n        </>\n      ) : null}\n      <Footer />\n    </Layout>\n  );\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport \"./translations/i18n\";\nimport { App } from \"./App\";\nimport { configure } from \"mobx\";\n\nconfigure({\n  enforceActions: \"never\",\n});\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","class Logcat {\n  static log(msg: any, ...optionalParams: any[]) {\n    console.log(msg);\n  }\n\n  static debug(msg: any, ...optionalParams: any[]) {\n    console.debug(msg);\n  }\n\n  static error(msg: any, err: any, ...optionalParams: any[]) {\n    console.error(msg, err);\n  }\n\n  static info(msg: any, ...optionalParams: any[]) {\n    console.info(msg);\n  }\n\n  static warning(msg: any, ...optionalParams: any[]) {\n    console.warn(msg);\n  }\n}\n\nexport default Logcat;\n"],"sourceRoot":""}