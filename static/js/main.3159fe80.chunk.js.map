{"version":3,"sources":["stores/provider/providerStore.ts","utils/logcat.ts","translations/i18n.ts","utils/colors.ts","utils/address.ts","components/header/header.tsx","components/footer/footer.tsx","components/input/FormInput.tsx","utils/textUtils.ts","constants/api.ts","utils/network.ts","services/apiService.ts","utils/hoc.tsx","stores/user/userStore.ts","screens/home/HomeViewModel.ts","components/date-picker/date-picker.tsx","screens/home/Home.tsx","utils/general.ts","utils/routes.ts","screens/404/404.tsx","components/app/WalletNotConnected.tsx","components/app/ProviderNotInjected.tsx","App.tsx","index.tsx"],"names":["ETHProvider","initialized","currentAccount","hasProvider","init","a","Logcat","info","window","ethereum","on","accounts","payload","request","method","personalMessageRequest","message","params","Buffer","from","toString","connect","makeAutoObservable","this","undefined","autoBind","msg","console","log","debug","err","error","warn","i18n","use","LanguageDetector","initReactI18next","resources","en","translation","changeLanguage","colors","primary","success","warning","blueOcean","textGrey","bg","white","grey","greyLight","renderShortAddress","address","checksummedAddress","toChecksumAddress","slice","substring","length","Header","t","useTranslation","style","textAlign","backgroundColor","color","justifyContent","display","alignItems","fontSize","type","disabled","getProviderStore","onClick","Footer","dayjs","year","errorStyle","borderWidth","borderColor","FormInput","title","input","onChange","direction","align","Text","size","event","target","value","isEmpty","str","trim","API_HUMANIQ_URL","HUMANIQ_ROUTES","POST_SIGNUP_CHECK","POST_SIGNUP_CONFIRM","GET_SIGNUP_OBJECT","GET_SIGNUP_PHOTO","GET_SIGNUP_WALLET","POST_PROFILE_UPDATE","formatRoute","routePath","reSplatParams","reSlashTokens","tokens","paramName","hasOwnProperty","paramValue","val","Object","prototype","call","i","replace","match","tokenName","encodeURIComponent","paramRegex","RegExp","g1","g2","paramRegexRR4","token","Store","Component","ApiService","axios","baseURL","headers","create","get","path","config","post","body","UserStore","firstName","lastName","country","city","birthDate","firstNameError","lastNameError","countryError","cityError","birthDateError","hmqIDCode","avatar","isFetching","api","setFirstName","setLastName","setCountry","setCity","setBirthDate","fetchProfile","wallet","result","setTimeout","runInAction","isAnyFieldEmpty","action","timeStamp","Date","getTime","test","HomeViewModel","galleryRef","ref","user","openFileExplorer","current","click","onFileChoose","preventDefault","file","files","DatePicker","generatePicker","dayjsGenerateConfig","Home","observer","view","store","inputGalleryRef","useRef","useEffect","flex","minWidth","Title","level","marginBottom","src","accept","id","dateString","defaultValue","getBirthDate","format","onSubmit","marginTop","width","props","useMemo","routes","home","NotFound","className","WalletNotConnected","marginRight","marginLeft","height","ProviderNotInjected","b","App","element","configure","enforceActions","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3159fe80.chunk.js","sourcesContent":["import { makeAutoObservable } from \"mobx\"\r\nimport Logcat from \"../../utils/logcat\"\r\n\r\nexport class ProviderStore {\r\n  initialized = false\r\n  currentAccount: any = null\r\n  hasProvider = false\r\n\r\n  constructor() {\r\n    makeAutoObservable(this, undefined, { autoBind: true })\r\n  }\r\n\r\n  init = async () => {\r\n    Logcat.info(\"starting connection...\")\r\n    if (window.ethereum) {\r\n      this.hasProvider = true\r\n\r\n      window.ethereum.on(\"accountsChanged\", (accounts: any) => {\r\n        this.currentAccount = accounts[0]\r\n      })\r\n\r\n      window.ethereum.on(\"disconnect\", () => {\r\n        this.currentAccount = null\r\n      })\r\n\r\n      window.ethereum.on(\"connect\", (accounts: any) => {\r\n        this.currentAccount = accounts[0]\r\n      })\r\n\r\n      window.ethereum.on(\"message\", (payload: any) => {\r\n        Logcat.info(\"message\", payload)\r\n      })\r\n\r\n      try {\r\n        const accounts = await window.ethereum.request({\r\n          method: \"eth_requestAccounts\"\r\n        })\r\n        this.currentAccount = accounts[0]\r\n      } catch (e) {\r\n        Logcat.info(\"ERROR\", e)\r\n      }\r\n      Logcat.info(\"starting successful...\")\r\n    }\r\n    this.initialized = true\r\n\r\n    Logcat.info(\"starting failed...\")\r\n  }\r\n\r\n  personalMessageRequest = (message: any): any => {\r\n    if (!window.ethereum) return null\r\n\r\n    return window.ethereum.request({\r\n      method: \"personal_sign\",\r\n      params: [\r\n        `0x${ Buffer.from(message, \"utf-8\").toString(\"hex\") }`,\r\n        this.currentAccount\r\n      ]\r\n    })\r\n  }\r\n\r\n  connect = async () => {\r\n    if (!window.ethereum || window.ethereum?.currentAccount) return\r\n\r\n    try {\r\n      const accounts = await window.ethereum.request({\r\n        method: \"eth_requestAccounts\"\r\n      })\r\n      this.currentAccount = accounts[0]\r\n    } catch (e) {\r\n      Logcat.info(\"ERROR\", e)\r\n    }\r\n  }\r\n}\r\n\r\nexport const ETHProvider = new ProviderStore()","class Logcat {\r\n    static log(msg: any, ...optionalParams: any[]) {\r\n        console.log(msg);\r\n    }\r\n\r\n    static debug(msg: any, ...optionalParams: any[]) {\r\n        console.debug(msg);\r\n    }\r\n\r\n    static error(msg: any, err: any, ...optionalParams: any[]) {\r\n        console.error(msg, err);\r\n    }\r\n\r\n    static info(msg: any, ...optionalParams: any[]) {\r\n        console.info(msg);\r\n    }\r\n\r\n    static warning(msg: any, ...optionalParams: any[]) {\r\n        console.warn(msg);\r\n    }\r\n}\r\n\r\nexport default Logcat;","import i18n from \"i18next\";\r\nimport { initReactI18next } from \"react-i18next\";\r\nimport LanguageDetector from \"i18next-browser-languagedetector\";\r\n\r\nimport en from \"./en/en.json\";\r\n\r\ni18n\r\n  .use(LanguageDetector)\r\n  .use(initReactI18next)\r\n  .init({\r\n    resources: {\r\n      en: {\r\n        translation: en,\r\n      },\r\n    },\r\n  });\r\n\r\ni18n.changeLanguage(\"en\");\r\n","const colors = {\r\n  primary: \"#0066DA\",\r\n  error: \"#F44336\",\r\n  success: \"#4CAF50\",\r\n  warning: \"#FD9900\",\r\n  blueOcean: \"#001833\",\r\n  textGrey: \"#9B9B9B\",\r\n  bg: \"#F5FAFF\",\r\n  white: \"#FFFFFF\",\r\n  grey: \"#E0E0E0\",\r\n  greyLight: \"#F2F3F6\",\r\n}\r\n\r\nexport default colors","import { toChecksumAddress } from \"ethereumjs-util\";\n\n/**\n * Returns short address format\n *\n * @param {String} address - String corresponding to an address\n * @param {Number} chars - Number of characters to show at the end and beginning.\n * Defaults to 4.\n * @returns {String} - String corresponding to short address format\n */\nexport function renderShortAddress(address: string, chars = 4) {\n  if (!address) return address;\n  const checksummedAddress = toChecksumAddress(address);\n  // return `${checksummedAddress.substr(0, chars + 2)}...${checksummedAddress.substr(-chars)}`;\n  return checksummedAddress\n    ? `${checksummedAddress.slice(0, 4)}...${checksummedAddress.substring(\n        checksummedAddress.length - 4\n      )}`\n    : \"\";\n}\n","import React from \"react\";\nimport { Button, Layout } from \"antd\";\nimport { useTranslation } from \"react-i18next\";\nimport colors from \"../../utils/colors\";\nimport { getProviderStore } from \"../../App\";\nimport { renderShortAddress } from \"../../utils/address\";\n\nconst Header = () => {\n  const { t } = useTranslation();\n\n  return (\n    <Layout.Header\n      style={{\n        textAlign: \"center\",\n        backgroundColor: colors.primary,\n        color: colors.white,\n        justifyContent: \"space-between\",\n        display: \"flex\",\n        alignItems: \"center\",\n      }}\n    >\n      <span\n        style={{\n          fontSize: 22,\n        }}\n      >\n        {t(\"appName\")}\n      </span>\n      <Button\n        type={\"primary\"}\n        disabled={!getProviderStore.hasProvider}\n        onClick={async () => {\n          if (!getProviderStore.currentAccount) {\n            await getProviderStore.connect();\n          }\n        }}\n      >\n        {renderShortAddress(getProviderStore.currentAccount) || \"not connected\"}\n      </Button>\n    </Layout.Header>\n  );\n};\n\nexport default Header;\n","import dayjs from \"dayjs\";\r\nimport React from \"react\";\r\nimport { Layout } from \"antd\";\r\nimport colors from \"../../utils/colors\"\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <Layout.Footer style={ {\r\n      textAlign: \"center\",\r\n      backgroundColor: colors.bg\r\n    } }>\r\n      <span>\r\n        Humaniq dApps React Boilerplate © {dayjs().year()}\r\n      </span>\r\n    </Layout.Footer>\r\n  );\r\n};\r\n\r\nexport default Footer;","import { Input, Space, Typography } from \"antd\"\r\nimport React from \"react\"\r\nimport colors from \"../../utils/colors\"\r\n\r\nexport interface FormInputInterface {\r\n  title: string\r\n  input: string\r\n  onChange: (value: string) => void\r\n  error?: string\r\n}\r\n\r\nconst errorStyle = {\r\n  borderWidth: 1,\r\n  borderColor: colors.error\r\n}\r\n\r\nexport const FormInput = ({ title, input, onChange, error }: FormInputInterface) => {\r\n  return (\r\n    <Space direction={ \"vertical\" } align={ \"baseline\" }>\r\n      <Typography.Text>{ title }</Typography.Text>\r\n      <Input size={ \"large\" }\r\n             onChange={ event => onChange(event.target.value) }\r\n             value={ input } style={ error ? errorStyle : {} }/>\r\n      { error && <Typography.Text style={ { color: colors.error } }>{ error }</Typography.Text> }\r\n    </Space>\r\n  )\r\n}","export const capitalize = (str?: string) => (str && str.charAt(0).toUpperCase() + str.slice(1)) || false\r\n\r\nexport const toUpperCase = (str?: string) => typeof str === 'string' ? str.toUpperCase() : ''\r\n\r\nexport const toLowerCase = (str?: string) => typeof str === 'string' ? str.toLowerCase() : ''\r\n\r\nexport const isEmpty = (str?: string) => typeof str === 'string' ? str.trim() === '' : true","export const API_HUMANIQ_URL = \"https://signupbot.humaniq.com/api/v1\"\r\nexport const API_HUMANIQ_TOKEN = \"XMaLhU75ZFklvAiV7yBZBNnlWsE9IowU\"\r\n\r\nexport const HUMANIQ_ROUTES = {\r\n  INTROSPECT: {\r\n    POST_SIGNUP_CHECK: \"/introspect/signup/check\",\r\n    POST_SIGNUP_CONFIRM: \"/introspect/signup/confirm\",\r\n    GET_SIGNUP_OBJECT: \"/introspect/signup/object/:uid\",\r\n    GET_SIGNUP_PHOTO: \"/introspect/signup/photo/:uid\",\r\n    GET_SIGNUP_WALLET: \"/introspect/signup/wallet/:wallet\"\r\n  },\r\n  DAPP: {\r\n    POST_PROFILE_UPDATE: \"/dapp/profile/update\"\r\n  }\r\n}","export const isNotAuthorized = (code: number) => code === 401\r\nexport const isNotAllowed = (code: number) => code === 403\r\nexport const isOk = (code: number) => code >= 200 && code <= 202\r\n\r\nfunction toArray(val: string) {\r\n  return Object.prototype.toString.call(val) !== \"[object Array]\" ? [ val ] : val;\r\n}\r\n\r\nexport function formatRoute(routePath: string, params: any) {\r\n\r\n  const reRepeatingSlashes = /\\/+/g; // \"/some//path\"\r\n  const reSplatParams = /\\*{1,2}/g;  // \"/some/*/complex/**/path\"\r\n  const reResolvedOptionalParams = /\\(([^:*?#]+?)\\)/g; // \"/path/with/(resolved/params)\"\r\n  const reUnresolvedOptionalParams = /\\([^:?#]*:[^?#]*?\\)/g; // \"/path/with/(groups/containing/:unresolved/optional/:params)\"\r\n  const reUnresolvedOptionalParamsRR4 = /(\\/[^\\/]*\\?)/g; // \"/path/with/groups/containing/unresolved?/optional/params?\"\r\n  const reTokens = /<(.*?)>/g;\r\n  const reSlashTokens = /_!slash!_/g;\r\n\r\n  let tokens: any = {};\r\n\r\n  if (params) {\r\n    for (let paramName in params) {\r\n      if (params.hasOwnProperty(paramName)) {\r\n        let paramValue = params[paramName];\r\n\r\n        if (paramName === \"splat\") { // special param name in RR, used for \"*\" and \"**\" placeholders\r\n          paramValue = toArray(paramValue); // when there are multiple globs, RR defines \"splat\" param as array.\r\n          let i = 0;\r\n          routePath = routePath.replace(reSplatParams, (match) => {\r\n            let val = paramValue[i++];\r\n            if (val == null) {\r\n              return \"\";\r\n            } else {\r\n              let tokenName = `splat${ i }`;\r\n              tokens[tokenName] = match === \"*\"\r\n                ? encodeURIComponent(val)\r\n                // don't escape slashes for double star, as \"**\" considered greedy by RR spec\r\n                : encodeURIComponent(val.toString().replace(/\\//g, \"_!slash!_\")).replace(reSlashTokens, \"/\");\r\n              return `<${ tokenName }>`;\r\n            }\r\n          });\r\n        } else {\r\n          // Rougly resolve all named placeholders.\r\n          // Cases:\r\n          // - \"/path/:param\"\r\n          // - \"/path/(:param)\"\r\n          // - \"/path(/:param)\"\r\n          // - \"/path(/:param/):another_param\"\r\n          // - \"/path/:param(/:another_param)\"\r\n          // - \"/path(/:param/:another_param)\"\r\n          const paramRegex = new RegExp(\"(\\/|\\\\(|\\\\)|^):\" + paramName + \"(\\/|\\\\)|\\\\(|$)\");\r\n          routePath = routePath.replace(paramRegex, (match, g1, g2) => {\r\n            tokens[paramName] = encodeURIComponent(paramValue);\r\n            return `${ g1 }<${ paramName }>${ g2 }`;\r\n          });\r\n          const paramRegexRR4 = new RegExp(\"(.*):\" + paramName + \"\\\\?(.*)\");\r\n          routePath = routePath.replace(paramRegexRR4, (match, g1, g2) => {\r\n            tokens[paramName] = encodeURIComponent(paramValue);\r\n            return `${ g1 }<${ paramName }>${ g2 }`;\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return routePath\r\n    // Remove braces around resolved optional params (i.e. \"/path/(value)\")\r\n    .replace(reResolvedOptionalParams, \"$1\")\r\n    // Remove all sequences containing at least one unresolved optional param\r\n    .replace(reUnresolvedOptionalParams, \"\")\r\n    // Remove all sequences containing at least one unresolved optional param in RR4\r\n    .replace(reUnresolvedOptionalParamsRR4, \"\")\r\n    // After everything related to RR syntax is removed, insert actual values\r\n    .replace(reTokens, (match, token) => tokens[token])\r\n    // Remove repeating slashes\r\n    .replace(reRepeatingSlashes, \"/\")\r\n    // Always remove ending slash for consistency\r\n    .replace(/\\/+$/, \"\")\r\n    // If there was a single slash only, keep it\r\n    .replace(/^$/, \"/\");\r\n}","import axios, { AxiosInstance, AxiosRequestConfig } from \"axios\";\r\nimport { API_HUMANIQ_URL } from \"../constants/api\";\r\nimport { formatRoute } from \"../utils/network\";\r\n\r\nexport class ApiService {\r\n  axios: AxiosInstance\r\n  init = (baseURL: string = API_HUMANIQ_URL, headers = {}) => {\r\n    this.axios = axios.create({ baseURL, headers })\r\n  }\r\n  get = async (path: string, params?: any, config?: AxiosRequestConfig) => this.axios.get(formatRoute(path, params), config)\r\n  post = async (path: string, body?: any, params?: any, config?: AxiosRequestConfig) => this.axios.post(params ? formatRoute(path, params) : path, body, config)\r\n}","import React, { useMemo } from 'react'\r\n\r\nexport const withStore = (Store: any, Component: any) => ({ ...props }) => {\r\n  const store = useMemo(() => {\r\n    return new Store()\r\n  }, [])\r\n\r\n  return <Component store={ store } { ...props }/>\r\n}","import { action, makeAutoObservable, runInAction, } from \"mobx\";\r\nimport { getProviderStore } from \"../../App\";\r\nimport { isEmpty } from \"../../utils/textUtils\";\r\nimport Logcat from \"../../utils/logcat\";\r\nimport { t } from \"i18next\";\r\nimport dayjs from \"dayjs\";\r\nimport { ApiService } from \"../../services/apiService\";\r\nimport { API_HUMANIQ_TOKEN, API_HUMANIQ_URL, HUMANIQ_ROUTES } from \"../../constants/api\";\r\n\r\n// const test = {\r\n//   firstName: \"Antonin\",\r\n//   lastName: \"Antuanov\",\r\n//   country: \"Uzbekistan\",\r\n//   city: \"Tashkent\",\r\n//   birthDate: \"10.10.1993\",\r\n//   hmqIDCode: \"3GLBe\",\r\n//   avatar: \"https://files.salebot.pro/uploads/message_files/8c5826b6-3f24-4efa-a7c6-4c150dadcd20.jpg\"\r\n// }\r\n\r\nclass User {\r\n  firstName = \"\";\r\n  lastName = \"\";\r\n  country = \"\";\r\n  city = \"\";\r\n  birthDate = \"\";\r\n\r\n  firstNameError?: string;\r\n  lastNameError?: string;\r\n  countryError?: string;\r\n  cityError?: string;\r\n  birthDateError?: string;\r\n\r\n  hmqIDCode = \"\";\r\n  avatar = \"\";\r\n  isFetching = false;\r\n\r\n  api: ApiService\r\n\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n    this.api = new ApiService()\r\n    this.api.init(API_HUMANIQ_URL, { \"x-auth-token\": API_HUMANIQ_TOKEN })\r\n  }\r\n\r\n  get getBirthDate() {\r\n    return !isEmpty(this.birthDate) ? dayjs(this.birthDate) : dayjs();\r\n  }\r\n\r\n  get buttonDisabled() {\r\n    return this.isAnyFieldEmpty();\r\n  }\r\n\r\n  setFirstName = (value: string) => {\r\n    this.firstNameError = undefined;\r\n    this.firstName = value;\r\n  };\r\n\r\n  setLastName = (value: string) => {\r\n    this.lastNameError = undefined;\r\n    this.lastName = value;\r\n  };\r\n\r\n  setCountry = (value: string) => {\r\n    this.countryError = undefined;\r\n    this.country = value;\r\n  };\r\n\r\n  setCity = (value: string) => {\r\n    this.cityError = undefined;\r\n    this.city = value;\r\n  };\r\n\r\n  setBirthDate = (value: string) => {\r\n    this.birthDateError = undefined;\r\n    this.birthDate = value;\r\n  };\r\n\r\n  fetchProfile = async () => {\r\n    // some profile fetching\r\n    this.isFetching = true;\r\n\r\n\r\n    try {\r\n      const result = await this.api.get(HUMANIQ_ROUTES.INTROSPECT.GET_SIGNUP_WALLET, { wallet: getProviderStore.currentAccount })\r\n      console.log(result)\r\n      if (result) {\r\n        //'Your profile successfully fetched'\r\n      } else {\r\n        // 'Server error'\r\n      }\r\n    } catch (e) {\r\n      Logcat.info(\"ERROR\", e);\r\n    } finally {\r\n    }\r\n\r\n    Logcat.info(\"fetching profile...\");\r\n    setTimeout(() => {\r\n      runInAction(() => {\r\n        // this.setProfileUser(test)\r\n        this.isFetching = false;\r\n      });\r\n      Logcat.info(\"fetching profile... done\");\r\n    }, 3000);\r\n  };\r\n\r\n  @action\r\n  onSubmit = async () => {\r\n    if (isEmpty(this.firstName)) {\r\n      this.firstNameError = t(\"emptyField\");\r\n    }\r\n\r\n    if (isEmpty(this.lastName)) {\r\n      this.lastNameError = t(\"emptyField\");\r\n    }\r\n\r\n    if (isEmpty(this.country)) {\r\n      this.countryError = t(\"emptyField\");\r\n    }\r\n\r\n    if (isEmpty(this.city)) {\r\n      this.cityError = t(\"emptyField\");\r\n    }\r\n\r\n    if (isEmpty(this.birthDate)) {\r\n      this.birthDateError = t(\"emptyField\");\r\n    }\r\n\r\n    if (this.isAnyFieldEmpty()) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const timeStamp = new Date().getTime();\r\n      const request = `ADDRESS ${ getProviderStore.currentAccount } UPDATE PERSONAL INFO TIMESTAMP ${ timeStamp }`;\r\n      Logcat.info(\"Personal message: \", request);\r\n      const result = await getProviderStore.personalMessageRequest(request);\r\n      if (result) {\r\n        // const data = {\r\n        //   query: {\r\n        //     addressFrom: getProviderStore.currentAccount,\r\n        //     timeStamp,\r\n        //     typeOperation: \"UPSERT\",\r\n        //     typeMessage: \"humaniqIdentity\",\r\n        //     payload: {\r\n        //       lastName: this.lastName,\r\n        //       firstName: this.firstName\r\n        //     }\r\n        //   },\r\n        //   signature: result\r\n        // }\r\n\r\n        console.log(\"here\");\r\n\r\n        try {\r\n          const result = await this.api.post(HUMANIQ_ROUTES.DAPP.POST_PROFILE_UPDATE, {})\r\n\r\n          if (result) {\r\n            //'Your profile successfully updated'\r\n          } else {\r\n            // 'Server error'\r\n          }\r\n        } catch (e) {\r\n          Logcat.info(\"ERROR\", e);\r\n        } finally {\r\n\r\n        }\r\n      }\r\n    } catch (e) {\r\n      Logcat.info(e);\r\n    }\r\n  };\r\n\r\n  @action\r\n  setProfileUser = (test: any) => {\r\n    this.firstName = test.firstName;\r\n    this.lastName = test.lastName;\r\n    this.country = test.country;\r\n    this.city = test.city;\r\n    this.birthDate = test.birthDate;\r\n    this.avatar = test.avatar;\r\n  };\r\n\r\n  @action\r\n  onReset = () => {\r\n    this.firstName = \"\";\r\n    this.lastName = \"\";\r\n    this.country = \"\";\r\n    this.city = \"\";\r\n    this.birthDate = \"\";\r\n    this.hmqIDCode = \"\";\r\n  };\r\n\r\n  isAnyFieldEmpty = () =>\r\n    isEmpty(this.firstName) ||\r\n    isEmpty(this.lastNameError) ||\r\n    isEmpty(this.country) ||\r\n    isEmpty(this.city) ||\r\n    isEmpty(this.birthDate);\r\n}\r\n\r\nexport const UserStore = new User();","import { RefObject } from \"react\";\nimport { makeAutoObservable } from \"mobx\";\nimport Logcat from \"../../utils/logcat\";\nimport { UserStore as user } from \"../../stores/user/userStore\";\n\nexport class HomeViewModel {\n  private galleryRef?: RefObject<HTMLInputElement>;\n\n  constructor() {\n    makeAutoObservable(this, {}, { autoBind: true });\n  }\n\n  init = async (ref?: RefObject<HTMLInputElement>) => {\n    this.galleryRef = ref;\n    await user.fetchProfile();\n  };\n\n  openFileExplorer = () => {\n    this.galleryRef?.current?.click();\n  };\n\n  onFileChoose = (event: any) => {\n    event.preventDefault();\n    let file = event.target.files[0];\n    Logcat.log(\"file...\", file);\n    // let form = new FormData();\n    // form.append('file', this.state.file);\n  };\n}\n","import { Dayjs } from \"dayjs\";\nimport dayjsGenerateConfig from \"rc-picker/lib/generate/dayjs\";\nimport generatePicker from \"antd/es/date-picker/generatePicker\";\nimport \"antd/es/date-picker/style/index\";\n\nconst DatePicker = generatePicker<Dayjs>(dayjsGenerateConfig);\n\nexport default DatePicker;\n","import React, { useEffect, useRef } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { Avatar, Button, Card, Space, Spin, Typography } from \"antd\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { dateFormat } from \"../../utils/general\";\r\nimport { FormInput } from \"../../components/input/FormInput\";\r\nimport colors from \"../../utils/colors\";\r\nimport { HomeViewModel } from \"./HomeViewModel\";\r\nimport { UserStore as user } from \"../../stores/user/userStore\";\r\nimport DatePicker from \"../../components/date-picker/date-picker\";\r\nimport { Content } from \"antd/es/layout/layout\";\r\nimport { withStore } from \"../../utils/hoc\";\r\n\r\nexport interface HomeScreenInterface {\r\n  store: HomeViewModel;\r\n}\r\n\r\nconst HomeImpl = ({ store: view }: HomeScreenInterface) => {\r\n  const { t } = useTranslation();\r\n  const inputGalleryRef = useRef<any>();\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      await view.init(inputGalleryRef);\r\n    })();\r\n  }, []);\r\n\r\n  if (user.isFetching) {\r\n    return (\r\n      <Card\r\n        style={ {\r\n          display: \"flex\",\r\n          flex: 1,\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n          minWidth: 300,\r\n          borderWidth: 0,\r\n        } }\r\n      >\r\n        <Space direction={ \"horizontal\" }>\r\n          <Spin/>\r\n          <Typography.Title level={ 3 }>{ t(\"loading\") }</Typography.Title>\r\n        </Space>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Content>\r\n      <Card\r\n        style={ {\r\n          textAlign: \"center\",\r\n          marginBottom: 24,\r\n          borderWidth: 0,\r\n        } }\r\n      >\r\n        <Space direction=\"vertical\">\r\n          <Typography.Title level={ 1 }>{ t(\"yourProfile\") }</Typography.Title>\r\n\r\n          <Avatar size={ 100 } src={ user.avatar }/>\r\n\r\n          <input\r\n            onChange={ view.onFileChoose }\r\n            accept=\"image/*\"\r\n            type=\"file\"\r\n            id=\"file\"\r\n            ref={ inputGalleryRef }\r\n            style={ { display: \"none\" } }\r\n          />\r\n          <Button\r\n            onClick={ view.openFileExplorer }\r\n            size={ \"small\" }\r\n            style={ { marginBottom: 20 } }\r\n          >\r\n            { t(\"changeAvatar\") }\r\n          </Button>\r\n\r\n          <FormInput\r\n            title={ t(\"firstName\") }\r\n            input={ user.firstName }\r\n            onChange={ user.setFirstName }\r\n            error={ user.firstNameError }\r\n          />\r\n\r\n          <FormInput\r\n            title={ t(\"lastName\") }\r\n            input={ user.lastName }\r\n            onChange={ user.setLastName }\r\n            error={ user.lastNameError }\r\n          />\r\n\r\n          <FormInput\r\n            title={ t(\"country\") }\r\n            input={ user.country }\r\n            onChange={ user.setCountry }\r\n            error={ user.countryError }\r\n          />\r\n\r\n          <FormInput\r\n            title={ t(\"city\") }\r\n            input={ user.city }\r\n            onChange={ user.setCity }\r\n            error={ user.cityError }\r\n          />\r\n\r\n          <Space direction=\"vertical\" size={ 12 }>\r\n            <Typography.Text>{ t(\"birthDate\") }</Typography.Text>\r\n            <DatePicker\r\n              onChange={ (value: any, dateString: string) => {\r\n                user.setBirthDate(dateString);\r\n              } }\r\n              style={\r\n                user.birthDateError\r\n                  ? { borderWidth: 1, borderColor: colors.error }\r\n                  : {}\r\n              }\r\n              defaultValue={ user.getBirthDate }\r\n              format={ dateFormat }\r\n            />\r\n          </Space>\r\n\r\n          <Button\r\n            onClick={ user.onSubmit }\r\n            size={ \"large\" }\r\n            style={ { marginTop: 30, width: \"100%\" } }\r\n            type=\"primary\"\r\n          >\r\n            { t(\"update\") }\r\n          </Button>\r\n        </Space>\r\n      </Card>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport const Home = withStore(HomeViewModel, observer(HomeImpl));\r\n","export const dateFormat = 'DD.MM.YYYY'","const routes = {\r\n  home: {\r\n    path: \"/\",\r\n  }\r\n};\r\n\r\nexport default routes;","import React from \"react\";\r\n\r\nconst NotFound = () => {\r\n  return <div className=\"home-card\"></div>;\r\n};\r\n\r\nexport default NotFound;\r\n","import { Button, Layout, Typography } from \"antd\"\r\nimport React from \"react\"\r\nimport { useTranslation } from \"react-i18next\"\r\n\r\nexport interface WalletNotConnectedProps {\r\n  onClick: () => {}\r\n}\r\n\r\nexport const WalletNotConnected = ({ onClick }: WalletNotConnectedProps) => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <Layout style={ {\r\n      textAlign: \"center\",\r\n      display: \"flex\",\r\n      flex: 1,\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n      minWidth: 300,\r\n      marginBottom: 24,\r\n      borderWidth: 0,\r\n      marginRight: 30,\r\n      marginLeft: 30\r\n    } }>\r\n      <Typography.Title level={ 3 }>{ t(\"walletNotConnected\") }</Typography.Title>\r\n      <Button onClick={ onClick } size={ \"large\" }\r\n              style={ { marginTop: 30, width: '100%', height: 60 } }\r\n              type=\"primary\">\r\n        { t(\"connectWallet\") }\r\n      </Button>\r\n    </Layout>\r\n  )\r\n}","import { Layout, Typography } from \"antd\"\r\nimport React from \"react\"\r\nimport { useTranslation } from \"react-i18next\"\r\n\r\nexport const ProviderNotInjected = () => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <Layout style={ {\r\n      display: \"flex\",\r\n      flex: 1,\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n      minWidth: 300,\r\n      marginBottom: 24,\r\n      borderWidth: 0\r\n    } }>\r\n      <Typography.Title level={ 3 }>{ t(\"notAllowed\") }</Typography.Title>\r\n    </Layout>\r\n  )\r\n}","import React, { useEffect } from \"react\";\nimport Header from \"./components/header/header\";\nimport Footer from \"./components/footer/footer\";\nimport { HashRouter as Router, Route, Routes } from \"react-router-dom\";\nimport { Home } from \"./screens/home/Home\";\nimport \"antd/dist/antd.css\";\nimport \"./App.scss\";\nimport routes from \"./utils/routes\";\nimport NotFound from \"./screens/404/404\";\nimport b from \"buffer\";\nimport { observer } from \"mobx-react\";\nimport { Layout } from \"antd\";\nimport { WalletNotConnected } from \"./components/app/WalletNotConnected\";\nimport { ProviderNotInjected } from \"./components/app/ProviderNotInjected\";\nimport { ETHProvider } from \"./stores/provider/providerStore\";\n\nwindow.Buffer = b.Buffer;\n\nexport const getProviderStore = ETHProvider;\n\nexport const App = observer(() => {\n  useEffect(() => {\n    (async () => {\n      await getProviderStore.init();\n    })();\n  }, []);\n\n  return (\n    <Layout className=\"App\">\n      <Header />\n      {getProviderStore.initialized ? (\n        <>\n          {getProviderStore.hasProvider ? (\n            <>\n              {getProviderStore.currentAccount ? (\n                <Router>\n                  <Routes>\n                    <Route path={routes.home.path} element={<Home />} />\n                    <Route path=\"*\" element={<NotFound />} />\n                  </Routes>\n                </Router>\n              ) : (\n                <WalletNotConnected onClick={getProviderStore.connect} />\n              )}\n            </>\n          ) : (\n            <ProviderNotInjected />\n          )}\n        </>\n      ) : null}\n      <Footer />\n    </Layout>\n  );\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport \"./translations/i18n\";\nimport { App } from \"./App\";\nimport { configure } from \"mobx\";\n\nconfigure({\n  enforceActions: \"never\",\n});\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}