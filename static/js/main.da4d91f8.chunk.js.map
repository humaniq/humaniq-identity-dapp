{"version":3,"sources":["stores/provider/providerStore.ts","translations/i18n.ts","utils/colors.ts","utils/address.ts","components/header/header.tsx","components/footer/footer.tsx","constants/general.ts","components/input/FormInput.tsx","utils/textUtils.ts","constants/api.ts","utils/network.ts","services/apiService/apiService.ts","utils/hoc.tsx","stores/user/userStore.ts","screens/home/HomeViewModel.ts","components/date-picker/date-picker.tsx","screens/home/Home.tsx","utils/routes.ts","screens/404/404.tsx","components/app/WalletNotConnected.tsx","components/app/ProviderNotFound.tsx","App.tsx","index.tsx","utils/logcat.ts"],"names":["ETHProvider","initialized","currentAccount","hasProvider","init","a","window","ethereum","on","accounts","payload","Logcat","info","request","method","personalMessageRequest","message","params","Buffer","from","toString","connect","disconnect","makeAutoObservable","this","undefined","autoBind","i18n","use","LanguageDetector","initReactI18next","resources","en","translation","changeLanguage","colors","primary","error","success","warning","blueOcean","textGrey","bg","white","grey","greyLight","renderShortAddress","address","checksummedAddress","toChecksumAddress","slice","substring","length","Header","observer","t","useTranslation","style","padding","textAlign","backgroundColor","color","justifyContent","display","alignItems","fontSize","lineHeight","getProviderStore","overlay","Item","onClick","placement","type","disabled","Footer","dayjs","year","DATE_FORMAT","errorStyle","borderWidth","borderColor","FormInput","title","input","onChange","hint","props","direction","align","Text","size","placeholder","event","target","value","isEmpty","str","trim","API_HUMANIQ_URL","HUMANIQ_ROUTES","POST_SIGNUP_CHECK","POST_SIGNUP_CONFIRM","GET_SIGNUP_OBJECT","GET_SIGNUP_PHOTO","GET_SIGNUP_WALLET","POST_PROFILE_UPDATE","POST_PROFILE_PHOTO_UPDATE","formatRoute","routePath","reSplatParams","reSlashTokens","tokens","paramName","hasOwnProperty","paramValue","val","Object","prototype","call","i","replace","match","tokenName","encodeURIComponent","paramRegex","RegExp","g1","g2","paramRegexRR4","token","Store","Component","ApiService","axios","baseURL","headers","create","interceptors","response","isOk","Promise","resolve","get","path","config","post","body","put","User","firstName","lastName","country","city","birthDate","firstNameError","lastNameError","countryError","cityError","birthDateError","photoURI","isFetching","photoUploading","api","setFirstName","setLastName","setCountry","setCity","setBirthDate","fetchProfile","wallet","result","setProfileUser","data","isAnyFieldEmpty","action","file","url","timeStamp","Date","getTime","query","addressFrom","typeOperation","typeMessage","photoUrl","signature","test","UserStore","HomeViewModel","galleryRef","ref","user","reaction","onReset","openFileExplorer","current","click","onFileChoose","preventDefault","files","uploadPhoto","makeObservable","DatePicker","generatePicker","dayjsGenerateConfig","Home","view","store","inputGalleryRef","useRef","useEffect","flex","minWidth","Title","level","margin","width","height","src","hidden","marginBottom","loading","dateString","defaultValue","getBirthDate","format","onSubmit","marginTop","useMemo","routes","home","NotFound","className","WalletNotConnected","marginRight","marginLeft","ProviderNotFound","b","App","element","configure","enforceActions","ReactDOM","render","document","getElementById","msg","optionalParams","console","log","debug","err","warn"],"mappings":"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","file":"static/js/main.da4d91f8.chunk.js","sourcesContent":["import { makeAutoObservable } from \"mobx\";\nimport Logcat from \"../../utils/logcat\";\n\nexport class ProviderStore {\n  initialized = false;\n  currentAccount: any = null;\n  hasProvider = false;\n\n  constructor() {\n    makeAutoObservable(this, undefined, { autoBind: true });\n  }\n\n  init = async () => {\n    if (window.ethereum) {\n      this.hasProvider = true;\n\n      window.ethereum.on(\"accountsChanged\", (accounts: any) => {\n        this.currentAccount = accounts[0];\n      });\n\n      window.ethereum.on(\"disconnect\", () => {\n        this.currentAccount = null;\n      });\n\n      window.ethereum.on(\"connect\", (accounts: any) => {\n        this.currentAccount = accounts[0];\n      });\n\n      window.ethereum.on(\"message\", (payload: any) => {\n        Logcat.info(\"message\", payload);\n      });\n\n      try {\n        const accounts = await window.ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        this.currentAccount = accounts[0];\n      } catch (e) {\n        Logcat.info(\"ERROR\", e);\n      }\n    }\n    this.initialized = true;\n  };\n\n  personalMessageRequest = (message: any): any => {\n    if (!window.ethereum) return null;\n\n    return window.ethereum.request({\n      method: \"personal_sign\",\n      params: [\n        `0x${Buffer.from(message, \"utf-8\").toString(\"hex\")}`,\n        this.currentAccount,\n      ],\n    });\n  };\n\n  connect = async () => {\n    if (!window.ethereum || window.ethereum?.currentAccount) return;\n\n    try {\n      const accounts = await window.ethereum.request({\n        method: \"eth_requestAccounts\",\n      });\n      this.currentAccount = accounts[0];\n    } catch (e) {\n      Logcat.info(\"ERROR\", e);\n    }\n  };\n\n  disconnect = () => {\n    this.currentAccount = null;\n  };\n}\n\nexport const ETHProvider = new ProviderStore();\n","import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\n\nimport en from \"./en/en.json\";\n\ni18n\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    resources: {\n      en: {\n        translation: en,\n      },\n    },\n  });\n\ni18n.changeLanguage(\"en\");\n","const colors = {\n  primary: \"#0066DA\",\n  error: \"#F44336\",\n  success: \"#4CAF50\",\n  warning: \"#FD9900\",\n  blueOcean: \"#001833\",\n  textGrey: \"#9B9B9B\",\n  bg: \"#F5FAFF\",\n  white: \"#FFFFFF\",\n  grey: \"#E0E0E0\",\n  greyLight: \"#F2F3F6\",\n}\n\nexport default colors","import { toChecksumAddress } from \"ethereumjs-util\";\n\n/**\n * Returns short address format\n *\n * @param {String} address - String corresponding to an address\n * @param {Number} chars - Number of characters to show at the end and beginning.\n * Defaults to 4.\n * @returns {String} - String corresponding to short address format\n */\nexport function renderShortAddress(address: string, chars = 4) {\n  if (!address) return address;\n  const checksummedAddress = toChecksumAddress(address);\n  // return `${checksummedAddress.substr(0, chars + 2)}...${checksummedAddress.substr(-chars)}`;\n  return checksummedAddress\n    ? `${checksummedAddress.slice(0, 4)}...${checksummedAddress.substring(\n        checksummedAddress.length - 4\n      )}`\n    : \"\";\n}\n","import React from \"react\";\nimport { Button, Dropdown, Layout, Menu } from \"antd\";\nimport { useTranslation } from \"react-i18next\";\nimport colors from \"../../utils/colors\";\nimport { getProviderStore } from \"../../App\";\nimport { renderShortAddress } from \"../../utils/address\";\nimport { observer } from \"mobx-react\";\n\nconst Header = observer(() => {\n  const { t } = useTranslation();\n\n  return (\n    <Layout.Header\n      style={{\n        padding: \"0 25px\",\n        textAlign: \"center\",\n        backgroundColor: colors.primary,\n        color: colors.white,\n        justifyContent: \"space-between\",\n        display: \"flex\",\n        alignItems: \"center\",\n      }}\n    >\n      <span\n        style={{\n          fontSize: 22,\n          lineHeight: 24,\n        }}\n      >\n        {t(\"appName\")}\n      </span>\n      {getProviderStore.currentAccount ? (\n        <Dropdown\n          overlay={\n            <Menu>\n              <Menu.Item key={\"logout\"}>\n                <div onClick={getProviderStore.disconnect}>\n                  {t(\"disconnect\")}\n                </div>\n              </Menu.Item>\n            </Menu>\n          }\n          placement=\"bottomLeft\"\n        >\n          <Button\n            type={\"primary\"}\n            disabled={!getProviderStore.hasProvider}\n            onClick={async () => {\n              if (!getProviderStore.currentAccount) {\n                await getProviderStore.connect();\n              }\n            }}\n          >\n            {renderShortAddress(getProviderStore.currentAccount) ||\n              t(\"notConnected\")}\n          </Button>\n        </Dropdown>\n      ) : (\n        <Button\n          type={\"primary\"}\n          disabled={!getProviderStore.hasProvider}\n          onClick={async () => {\n            if (!getProviderStore.currentAccount) {\n              await getProviderStore.connect();\n            }\n          }}\n        >\n          {renderShortAddress(getProviderStore.currentAccount) ||\n            t(\"notConnected\")}\n        </Button>\n      )}\n    </Layout.Header>\n  );\n});\n\nexport default Header;\n","import dayjs from \"dayjs\";\nimport React from \"react\";\nimport { Layout } from \"antd\";\nimport colors from \"../../utils/colors\";\nimport { useTranslation } from \"react-i18next\";\n\nconst Footer = () => {\n  const { t } = useTranslation();\n\n  return (\n    <Layout.Footer\n      style={{\n        textAlign: \"center\",\n        backgroundColor: colors.bg,\n      }}\n    >\n      <span>\n        {t(\"appName\")} {dayjs().year()}\n      </span>\n    </Layout.Footer>\n  );\n};\n\nexport default Footer;\n","export const DATE_FORMAT = \"DD.MM.YYYY\";\n","import { Input, Space, Typography } from \"antd\";\nimport React from \"react\";\nimport colors from \"../../utils/colors\";\n\nexport interface FormInputInterface {\n  title: string;\n  input: string;\n  onChange: (value: string) => void;\n  error?: string;\n  hint?: string;\n}\n\nconst errorStyle = {\n  borderWidth: 1,\n  borderColor: colors.error,\n};\n\nexport const FormInput = ({\n  title,\n  input,\n  onChange,\n  error,\n  hint,\n  ...props\n}: FormInputInterface) => {\n  return (\n    <Space direction={\"vertical\"} align={\"baseline\"}>\n      <Typography.Text>{title}</Typography.Text>\n      <Input\n        size={\"large\"}\n        placeholder={hint}\n        onChange={(event) => onChange(event.target.value)}\n        value={input}\n        style={error ? errorStyle : {}}\n        {...props}\n      />\n      {error && (\n        <Typography.Text style={{ color: colors.error }}>\n          {error}\n        </Typography.Text>\n      )}\n    </Space>\n  );\n};\n","export const capitalize = (str?: string) => (str && str.charAt(0).toUpperCase() + str.slice(1)) || false\n\nexport const toUpperCase = (str?: string) => typeof str === 'string' ? str.toUpperCase() : ''\n\nexport const toLowerCase = (str?: string) => typeof str === 'string' ? str.toLowerCase() : ''\n\nexport const isEmpty = (str?: string) => typeof str === 'string' ? str.trim() === '' : true","export const API_HUMANIQ_URL = \"https://signupbot.humaniq.com/api/v1\";\nexport const API_HUMANIQ_TOKEN = \"XMaLhU75ZFklvAiV7yBZBNnlWsE9IowU\";\n\nexport const HUMANIQ_ROUTES = {\n  INTROSPECT: {\n    POST_SIGNUP_CHECK: \"/introspect/signup/check\",\n    POST_SIGNUP_CONFIRM: \"/introspect/signup/confirm\",\n    GET_SIGNUP_OBJECT: \"/introspect/signup/object/:uid\",\n    GET_SIGNUP_PHOTO: \"/introspect/signup/photo/:uid\",\n    GET_SIGNUP_WALLET: \"/introspect/signup/wallet/:wallet\",\n  },\n  DAPP: {\n    POST_PROFILE_UPDATE: \"/dapp/profile/update\",\n    POST_PROFILE_PHOTO_UPDATE: \"/photo/upload\",\n  },\n};\n","export const isNotAuthorized = (code: number) => code === 401;\nexport const isNotAllowed = (code: number) => code === 403;\nexport const isOk = (code: number) => code >= 200 && code <= 202;\n\nfunction toArray(val: string) {\n  return Object.prototype.toString.call(val) !== \"[object Array]\" ? [val] : val;\n}\n\nexport function formatRoute(routePath: string, params: any) {\n  const reRepeatingSlashes = /\\/+/g; // \"/some//path\"\n  const reSplatParams = /\\*{1,2}/g; // \"/some/*/complex/**/path\"\n  const reResolvedOptionalParams = /\\(([^:*?#]+?)\\)/g; // \"/path/with/(resolved/params)\"\n  const reUnresolvedOptionalParams = /\\([^:?#]*:[^?#]*?\\)/g; // \"/path/with/(groups/containing/:unresolved/optional/:params)\"\n  const reUnresolvedOptionalParamsRR4 = /(\\/[^/]*\\?)/g; // \"/path/with/groups/containing/unresolved?/optional/params?\"\n  const reTokens = /<(.*?)>/g;\n  const reSlashTokens = /_!slash!_/g;\n\n  let tokens: any = {};\n\n  if (params) {\n    for (let paramName in params) {\n      if (params.hasOwnProperty(paramName)) {\n        let paramValue = params[paramName];\n\n        if (paramName === \"splat\") {\n          // special param name in RR, used for \"*\" and \"**\" placeholders\n          paramValue = toArray(paramValue); // when there are multiple globs, RR defines \"splat\" param as array.\n          let i = 0;\n          routePath = routePath.replace(reSplatParams, (match) => {\n            let val = paramValue[i++];\n            if (val == null) {\n              return \"\";\n            } else {\n              let tokenName = `splat${i}`;\n              tokens[tokenName] =\n                match === \"*\"\n                  ? encodeURIComponent(val)\n                  : // don't escape slashes for double star, as \"**\" considered greedy by RR spec\n                    encodeURIComponent(\n                      val.toString().replace(/\\//g, \"_!slash!_\")\n                    ).replace(reSlashTokens, \"/\");\n              return `<${tokenName}>`;\n            }\n          });\n        } else {\n          // Rougly resolve all named placeholders.\n          // Cases:\n          // - \"/path/:param\"\n          // - \"/path/(:param)\"\n          // - \"/path(/:param)\"\n          // - \"/path(/:param/):another_param\"\n          // - \"/path/:param(/:another_param)\"\n          // - \"/path(/:param/:another_param)\"\n          const paramRegex = new RegExp(\n            \"(/|\\\\(|\\\\)|^):\" + paramName + \"(/|\\\\)|\\\\(|$)\"\n          );\n          routePath = routePath.replace(paramRegex, (match, g1, g2) => {\n            tokens[paramName] = encodeURIComponent(paramValue);\n            return `${g1}<${paramName}>${g2}`;\n          });\n          const paramRegexRR4 = new RegExp(\"(.*):\" + paramName + \"\\\\?(.*)\");\n          routePath = routePath.replace(paramRegexRR4, (match, g1, g2) => {\n            tokens[paramName] = encodeURIComponent(paramValue);\n            return `${g1}<${paramName}>${g2}`;\n          });\n        }\n      }\n    }\n  }\n\n  return (\n    routePath\n      // Remove braces around resolved optional params (i.e. \"/path/(value)\")\n      .replace(reResolvedOptionalParams, \"$1\")\n      // Remove all sequences containing at least one unresolved optional param\n      .replace(reUnresolvedOptionalParams, \"\")\n      // Remove all sequences containing at least one unresolved optional param in RR4\n      .replace(reUnresolvedOptionalParamsRR4, \"\")\n      // After everything related to RR syntax is removed, insert actual values\n      .replace(reTokens, (match, token) => tokens[token])\n      // Remove repeating slashes\n      .replace(reRepeatingSlashes, \"/\")\n      // Always remove ending slash for consistency\n      .replace(/\\/+$/, \"\")\n      // If there was a single slash only, keep it\n      .replace(/^$/, \"/\")\n  );\n}\n","import axios, { AxiosInstance, AxiosRequestConfig, AxiosResponse } from \"axios\";\nimport { API_HUMANIQ_URL } from \"../../constants/api\";\nimport { formatRoute } from \"../../utils/network\";\n\nexport interface ApiServiceResponse<T> extends AxiosResponse<T> {\n  isOk: boolean;\n}\n\nexport class ApiService {\n  protected axios: AxiosInstance;\n\n  init = (baseURL: string = API_HUMANIQ_URL, headers = {}) => {\n    this.axios = axios.create({ baseURL, headers });\n\n    this.axios.interceptors.response.use(\n      function (response) {\n        return { ...response, isOk: true };\n      },\n      function (error) {\n        return Promise.resolve({ ...error, isOk: false }); // Promise.reject(error);\n      }\n    );\n  };\n\n  get = <T>(path: string, params?: any, config?: AxiosRequestConfig) =>\n    this.axios.get(formatRoute(path, params), config) as Promise<\n      ApiServiceResponse<T>\n    >;\n\n  post = <T>(\n    path: string,\n    body?: any,\n    params?: any,\n    config?: AxiosRequestConfig\n  ) =>\n    this.axios.post(\n      params ? formatRoute(path, params) : path,\n      body,\n      config\n    ) as Promise<ApiServiceResponse<T>>;\n\n  put = <T>(\n    path: string,\n    body?: any,\n    params?: any,\n    config?: AxiosRequestConfig\n  ) =>\n    this.axios.put(\n      params ? formatRoute(path, params) : path,\n      body,\n      config\n    ) as Promise<ApiServiceResponse<T>>;\n}\n","import React, { useMemo } from \"react\";\n\nexport const withStore =\n  (Store: any, Component: any) =>\n  ({ ...props }) => {\n    const store = useMemo(() => {\n      return new Store();\n    }, []);\n\n    return <Component store={store} {...props} />;\n  };\n","import { action, makeAutoObservable } from \"mobx\";\nimport { getProviderStore } from \"../../App\";\nimport { isEmpty } from \"../../utils/textUtils\";\nimport Logcat from \"../../utils/logcat\";\nimport { t } from \"i18next\";\nimport dayjs from \"dayjs\";\nimport { ApiService } from \"../../services/apiService/apiService\";\nimport {\n  API_HUMANIQ_TOKEN,\n  API_HUMANIQ_URL,\n  HUMANIQ_ROUTES,\n} from \"../../constants/api\";\nimport {\n  UserPhotoUpdateResponse,\n  UserProfileResponse,\n  UserProfileUpdateResponse,\n} from \"../../services/apiService/responses\";\nimport { DATE_FORMAT } from \"../../constants/general\";\nimport { message } from \"antd\";\nimport { ProfileUpdateRequest } from \"../../services/apiService/requests\";\n\nclass User {\n  firstName = \"\";\n  lastName = \"\";\n  country = \"\";\n  city = \"\";\n  birthDate = \"\";\n\n  firstNameError?: string;\n  lastNameError?: string;\n  countryError?: string;\n  cityError?: string;\n  birthDateError?: string;\n\n  photoURI = \"\";\n  isFetching = false;\n  photoUploading = false;\n\n  api: ApiService;\n\n  constructor() {\n    makeAutoObservable(this);\n    this.api = new ApiService();\n    this.api.init(API_HUMANIQ_URL, { \"x-auth-token\": API_HUMANIQ_TOKEN });\n  }\n\n  get getBirthDate() {\n    return !isEmpty(this.birthDate)\n      ? dayjs(this.birthDate, DATE_FORMAT)\n      : dayjs();\n  }\n\n  get buttonDisabled() {\n    return this.isAnyFieldEmpty();\n  }\n\n  setFirstName = (value: string) => {\n    this.firstNameError = undefined;\n    this.firstName = value;\n  };\n\n  setLastName = (value: string) => {\n    this.lastNameError = undefined;\n    this.lastName = value;\n  };\n\n  setCountry = (value: string) => {\n    this.countryError = undefined;\n    this.country = value;\n  };\n\n  setCity = (value: string) => {\n    this.cityError = undefined;\n    this.city = value;\n  };\n\n  setBirthDate = (value: string) => {\n    this.birthDateError = undefined;\n    this.birthDate = value;\n  };\n\n  fetchProfile = async () => {\n    this.isFetching = true;\n    try {\n      const result = await this.api.get<UserProfileResponse>(\n        HUMANIQ_ROUTES.INTROSPECT.GET_SIGNUP_WALLET,\n        { wallet: getProviderStore.currentAccount }\n      );\n\n      if (result.isOk) {\n        this.setProfileUser(result.data);\n      } else {\n        Logcat.info(\"PROFILE FETCH ERROR\", result);\n      }\n    } catch (e) {\n      Logcat.info(\"PROFILE FETCH ERROR\", e);\n    } finally {\n      this.isFetching = false;\n    }\n  };\n\n  @action\n  uploadPhoto = async (file: any) => {\n    this.photoUploading = true;\n    try {\n      const response = await this.api.post<UserPhotoUpdateResponse>(\n        HUMANIQ_ROUTES.DAPP.POST_PROFILE_PHOTO_UPDATE,\n        file,\n        null,\n        {\n          headers: { \"Content-Type\": \"image/png\" },\n        }\n      );\n\n      if (response.isOk) {\n        this.photoURI = response.data.url;\n      } else {\n        Logcat.info(\"PHOTO UPLOAD ERROR\");\n      }\n    } catch (e) {\n      Logcat.info(\"PHOTO UPLOAD ERROR\", e);\n    } finally {\n      this.photoUploading = false;\n    }\n  };\n\n  @action\n  onSubmit = async () => {\n    if (isEmpty(this.firstName)) {\n      this.firstNameError = t(\"emptyField\");\n    }\n\n    if (isEmpty(this.lastName)) {\n      this.lastNameError = t(\"emptyField\");\n    }\n\n    if (isEmpty(this.country)) {\n      this.countryError = t(\"emptyField\");\n    }\n\n    if (isEmpty(this.city)) {\n      this.cityError = t(\"emptyField\");\n    }\n\n    if (isEmpty(this.birthDate)) {\n      this.birthDateError = t(\"emptyField\");\n    }\n\n    if (this.isAnyFieldEmpty()) {\n      return;\n    }\n\n    const timeStamp = new Date().getTime();\n    const request = `ADDRESS ${getProviderStore.currentAccount} UPDATE PERSONAL INFO TIMESTAMP ${timeStamp}`;\n\n    try {\n      const result = await getProviderStore.personalMessageRequest(request);\n\n      if (result) {\n        const body = {\n          query: {\n            addressFrom: getProviderStore.currentAccount,\n            timeStamp,\n            typeOperation: \"UPSERT\",\n            typeMessage: \"humaniqIdentity\",\n            payload: {\n              lastName: this.lastName,\n              firstName: this.firstName,\n              birthDate: this.birthDate,\n              city: this.city,\n              country: this.country,\n              photoUrl: this.photoURI,\n            },\n          },\n          signature: result,\n        } as ProfileUpdateRequest;\n\n        const response = await this.api.post<UserProfileUpdateResponse>(\n          HUMANIQ_ROUTES.DAPP.POST_PROFILE_UPDATE,\n          body\n        );\n\n        if (response.isOk) {\n          message.success(t(\"userProfile.successUpdate\"));\n        } else {\n          message.error(t(\"userProfile.errorUpdate\"));\n          Logcat.info(\"ERROR\", response);\n        }\n      }\n    } catch (e) {\n      message.error(t(\"userProfile.errorSign\"));\n      Logcat.info(e);\n    }\n  };\n\n  @action\n  setProfileUser = (test: UserProfileResponse) => {\n    this.firstName = test.firstName;\n    this.lastName = test.lastName;\n    this.country = test.country;\n    this.city = test.city;\n    this.birthDate = test.birthDate;\n    this.photoURI = test.photoURI;\n  };\n\n  @action\n  onReset = () => {\n    this.firstName = \"\";\n    this.lastName = \"\";\n    this.country = \"\";\n    this.city = \"\";\n    this.birthDate = \"\";\n    this.photoURI = \"\";\n  };\n\n  isAnyFieldEmpty = () =>\n    isEmpty(this.firstName) ||\n    isEmpty(this.lastName) ||\n    isEmpty(this.country) ||\n    isEmpty(this.city) ||\n    isEmpty(this.birthDate);\n}\n\nexport const UserStore = new User();\n","import { RefObject } from \"react\";\nimport { makeObservable, reaction } from \"mobx\";\nimport { UserStore, UserStore as user } from \"../../stores/user/userStore\";\nimport { ETHProvider } from \"../../stores/provider/providerStore\";\n\nexport class HomeViewModel {\n  private galleryRef?: RefObject<HTMLInputElement>;\n\n  constructor() {\n    makeObservable(this, {}, { autoBind: true });\n  }\n\n  init = async (ref?: RefObject<HTMLInputElement>) => {\n    this.galleryRef = ref;\n    await user.fetchProfile();\n    reaction(\n      () => ETHProvider.currentAccount,\n      async (val) => {\n        if (val) {\n          await user.fetchProfile();\n        } else {\n          UserStore.onReset();\n        }\n      }\n    );\n  };\n\n  openFileExplorer = () => {\n    this.galleryRef?.current?.click();\n  };\n\n  onFileChoose = async (event: any) => {\n    event.preventDefault();\n    let file = event.target.files[0];\n    await user.uploadPhoto(file);\n  };\n}\n","import { Dayjs } from \"dayjs\";\nimport dayjsGenerateConfig from \"rc-picker/lib/generate/dayjs\";\nimport generatePicker from \"antd/es/date-picker/generatePicker\";\nimport \"antd/es/date-picker/style/index\";\n\nconst DatePicker = generatePicker<Dayjs>(dayjsGenerateConfig);\n\nexport default DatePicker;\n","import React, { useEffect, useRef } from \"react\";\nimport { observer } from \"mobx-react\";\nimport { Avatar, Button, Card, Space, Spin, Typography } from \"antd\";\nimport { useTranslation } from \"react-i18next\";\nimport { DATE_FORMAT } from \"../../constants/general\";\nimport { FormInput } from \"../../components/input/FormInput\";\nimport colors from \"../../utils/colors\";\nimport { HomeViewModel } from \"./HomeViewModel\";\nimport { UserStore as user } from \"../../stores/user/userStore\";\nimport DatePicker from \"../../components/date-picker/date-picker\";\nimport { Content } from \"antd/es/layout/layout\";\nimport { withStore } from \"../../utils/hoc\";\n\nexport interface HomeScreenInterface {\n  store: HomeViewModel;\n}\n\nconst HomeImpl = ({ store: view }: HomeScreenInterface) => {\n  const { t } = useTranslation();\n  const inputGalleryRef = useRef<any>();\n\n  useEffect(() => {\n    (async () => {\n      await view.init(inputGalleryRef);\n    })();\n  }, [view]);\n\n  if (user.isFetching) {\n    return (\n      <Card\n        style={{\n          display: \"flex\",\n          flex: 1,\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          minWidth: 300,\n          borderWidth: 0,\n        }}\n      >\n        <Space direction={\"horizontal\"}>\n          <Spin />\n          <Typography.Title level={3}>{t(\"loading\")}</Typography.Title>\n        </Space>\n      </Card>\n    );\n  }\n\n  return (\n    <Content>\n      <div\n        style={{\n          textAlign: \"center\",\n          margin: 24,\n          borderWidth: 0,\n        }}\n      >\n        <Space direction=\"vertical\">\n          <Typography.Title level={1}>{t(\"yourProfile\")}</Typography.Title>\n\n          {user.photoUploading ? (\n            <Space\n              align={\"center\"}\n              style={{\n                width: 100,\n                height: 100,\n                alignItems: \"center\",\n                justifyContent: \"center\",\n              }}\n            >\n              <Spin size={\"large\"} />\n            </Space>\n          ) : (\n            <Avatar size={100} src={user.photoURI} />\n          )}\n\n          <input\n            type=\"file\"\n            ref={inputGalleryRef}\n            onChange={view.onFileChoose}\n            hidden\n          />\n\n          <Button\n            onClick={view.openFileExplorer}\n            size={\"middle\"}\n            style={{ marginBottom: 10 }}\n            type=\"primary\"\n            color={colors.textGrey}\n            loading={user.photoUploading}\n            disabled={user.photoUploading}\n          >\n            {user.photoUploading ? t(\"uploading\") : t(\"changeAvatar\")}\n          </Button>\n\n          <FormInput\n            title={t(\"firstName\")}\n            input={user.firstName}\n            onChange={user.setFirstName}\n            error={user.firstNameError}\n            hint={t(\"userProfile.form.firstNameHint\")}\n          />\n\n          <FormInput\n            title={t(\"lastName\")}\n            input={user.lastName}\n            onChange={user.setLastName}\n            error={user.lastNameError}\n            hint={t(\"userProfile.form.lastNameHint\")}\n          />\n\n          <FormInput\n            title={t(\"country\")}\n            input={user.country}\n            onChange={user.setCountry}\n            error={user.countryError}\n            hint={t(\"userProfile.form.countryHint\")}\n          />\n\n          <FormInput\n            title={t(\"city\")}\n            input={user.city}\n            onChange={user.setCity}\n            error={user.cityError}\n            hint={t(\"userProfile.form.cityHint\")}\n          />\n\n          <Space direction=\"vertical\" size={12}>\n            <Typography.Text>{t(\"birthDate\")}</Typography.Text>\n            <DatePicker\n              onChange={(value: any, dateString: string) => {\n                user.setBirthDate(dateString);\n              }}\n              style={\n                user.birthDateError\n                  ? { borderWidth: 1, borderColor: colors.error }\n                  : {}\n              }\n              defaultValue={user.getBirthDate}\n              format={DATE_FORMAT}\n            />\n          </Space>\n\n          <Button\n            onClick={user.onSubmit}\n            size={\"large\"}\n            style={{ marginTop: 30, width: \"100%\" }}\n            type=\"primary\"\n          >\n            {t(\"update\")}\n          </Button>\n        </Space>\n      </div>\n    </Content>\n  );\n};\n\nexport const Home = withStore(HomeViewModel, observer(HomeImpl));\n","const routes = {\n  home: {\n    path: \"/\",\n  }\n};\n\nexport default routes;","import React from \"react\";\n\nconst NotFound = () => {\n  return <div className=\"home-card\"></div>;\n};\n\nexport default NotFound;\n","import { Button, Layout, Typography } from \"antd\";\nimport React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { observer } from \"mobx-react\";\nimport { getProviderStore } from \"../../App\";\n\nexport const WalletNotConnected = observer(() => {\n  const { t } = useTranslation();\n\n  return (\n    <Layout\n      style={{\n        textAlign: \"center\",\n        display: \"flex\",\n        flex: 1,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        minWidth: 300,\n        marginBottom: 24,\n        borderWidth: 0,\n        marginRight: 30,\n        marginLeft: 30,\n      }}\n    >\n      <Typography.Title level={3}>{t(\"walletNotConnected\")}</Typography.Title>\n      <Button\n        onClick={getProviderStore.connect}\n        size={\"large\"}\n        style={{ marginTop: 30, width: \"100%\", height: 60 }}\n        type=\"primary\"\n      >\n        {t(\"connectWallet\")}\n      </Button>\n    </Layout>\n  );\n});\n","import { Layout, Typography } from \"antd\";\nimport React from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nexport const ProviderNotFound = () => {\n  const { t } = useTranslation();\n\n  return (\n    <Layout\n      style={{\n        display: \"flex\",\n        flex: 1,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        minWidth: 300,\n        marginBottom: 24,\n        borderWidth: 0,\n      }}\n    >\n      <Typography.Title level={3}>{t(\"notFound\")}</Typography.Title>\n    </Layout>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport Header from \"./components/header/header\";\nimport Footer from \"./components/footer/footer\";\nimport { HashRouter as Router, Route, Routes } from \"react-router-dom\";\nimport { Home } from \"./screens/home/Home\";\nimport \"antd/dist/antd.css\";\nimport \"./App.scss\";\nimport routes from \"./utils/routes\";\nimport NotFound from \"./screens/404/404\";\nimport b from \"buffer\";\nimport { observer } from \"mobx-react\";\nimport { Layout } from \"antd\";\nimport { WalletNotConnected } from \"./components/app/WalletNotConnected\";\nimport { ProviderNotFound } from \"./components/app/ProviderNotFound\";\nimport { ETHProvider } from \"./stores/provider/providerStore\";\n\nwindow.Buffer = b.Buffer;\n\nexport const getProviderStore = ETHProvider;\n\nexport const App = observer(() => {\n  useEffect(() => {\n    (async () => {\n      await getProviderStore.init();\n    })();\n  }, []);\n\n  return (\n    <Layout className=\"App\">\n      <Header />\n      {getProviderStore.initialized ? (\n        <>\n          {getProviderStore.hasProvider ? (\n            <>\n              {getProviderStore.currentAccount ? (\n                <Router>\n                  <Routes>\n                    <Route path={routes.home.path} element={<Home />} />\n                    <Route path=\"*\" element={<NotFound />} />\n                  </Routes>\n                </Router>\n              ) : (\n                <WalletNotConnected />\n              )}\n            </>\n          ) : (\n            <ProviderNotFound />\n          )}\n        </>\n      ) : null}\n      <Footer />\n    </Layout>\n  );\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport \"./translations/i18n\";\nimport { App } from \"./App\";\nimport { configure } from \"mobx\";\n\nconfigure({\n  enforceActions: \"never\",\n});\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","class Logcat {\n  static log(msg: any, ...optionalParams: any[]) {\n    console.log(msg, optionalParams);\n  }\n\n  static debug(msg: any, ...optionalParams: any[]) {\n    console.debug(msg, optionalParams);\n  }\n\n  static error(msg: any, err: any, ...optionalParams: any[]) {\n    console.error(msg, err, optionalParams);\n  }\n\n  static info(msg: any, ...optionalParams: any[]) {\n    console.info(msg, optionalParams);\n  }\n\n  static warning(msg: any, ...optionalParams: any[]) {\n    console.warn(msg, optionalParams);\n  }\n}\n\nexport default Logcat;\n"],"sourceRoot":""}